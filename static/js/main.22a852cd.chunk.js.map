{"version":3,"sources":["components/config.js","components/Home.js","components/Search.js","components/SearchQuery.js","components/SearchWrapper.js","components/Image.js","components/LineText.js","components/ImageTextWrapper.js","components/utils.js","components/Queries.js","components/Surface2.js","components/Surface3.js","components/Surface3Wrapper.js","components/XmlView.js","components/Info.js","components/WindowNavBar.js","components/NextPrevBar.js","components/TextCompareItem.js","components/TextCompare.js","components/TextCompareWrapper.js","components/CommentItem.js","components/CommentCreate.js","components/Comments.js","components/Citation.js","components/TextOutline.js","components/TextOutlineWrapper.js","components/Window.js","components/TextNavBar.js","components/Text.js","components/VersionChain.js","components/TextWrapper.js","components/Item.js","components/Collection.js","components/AuthorCollection.js","components/Codex.js","components/TextSwitch.js","components/About.js","components/CodexListItem.js","components/Codices.js","components/NavBar.js","components/Footer.js","components/AppRouter.js","serviceWorker.js","index.js"],"names":["sparqlEndpoint","resourceEndpoint","Home","props","react_default","a","createElement","className","Container_default","id","fluid","Jumbotron_default","Button_default","react_router_dom","to","style","color","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","retrieveResults","bind","assertThisInitialized","state","searchResults","count","query","expressionid","Axios","get","then","d","setState","data","results","eid","nextProps","_this2","length","map","r","i","key","pid","dangerouslySetInnerHTML","__html","text","React","Component","SearchQuery","handleQueryUpdate","handleEidUpdate","handleRunSearch","e","preventDefault","target","value","Form_default","onSubmit","FormControl_default","type","placeholder","onChange","variant","SearchWrapper","hidden","components_SearchQuery","topLevel","split","components_Search","Image","newCoords","coords","coordsSplitArray","parseInt","imageLink","imageUrl","displayWidth","alt","src","LineText","whiteSpace","ImageTextWrapper","searchText","targetLabel","label","components_Image","canvas","canvasShort","components_LineText","loadXMLDoc","url","Promise","resolve","req","XMLHttpRequest","open","XSLTProcessor","responseType","console","log","onload","responseXML","send","runQuery","params","output","scrollToParagraph","hash","highlight","element","$","addClass","removeClass","children","setTimeout","stop","animate","scrollTop","offset","top","basicInfoQuery","itemExpressionUri","join","partsInfoQuery","resourceurl","getSurfaceInfo","surfaceid","Surface2","mount","handleNext","handlePrevious","handleToggleTextLines","handleToggleAllLines","currentSurfaceId","manifest","region","width","next","previous","imageurl","annotationsDisplay","showAllLines","handleSurfaceFocusChange","prevState","b","bindings","alUrl","d2","surfaceTitle","next_surface","previous_surface","annotations","resources","catch","error","retrieveSurfaceInfo","_this3","size","onClick","lineFocusId","h","resource","chars","on","components_ImageTextWrapper","surfaceButton","displayImages","Surface3","surfaces","manifestationid","d1","forEach","z","surface","firstLine","first","lastLine","last","order","newSurface","concat","toConsumableArray","fl","flcanvas","flcanvasShort","flcoords","y","ll","llcoords","lly","llh","llbottom","sort","Surface3Wrapper","handleChangeManifestation","handleToggleTextLinesView","manifestations","focusedManifestation","focusedManifestationSlug","view","slug","info","m","manifestation","manifestationTitle","includes","components_Surface3","title","index_esm","XmlView","retrieveXML","xmlstring","tresourceid","xmlurl","light","language","docco","showLineNumbers","Info","copyToClipboard","string","dummy","document","body","appendChild","select","execCommand","removeChild","newProps","resourceid","inbox","displayInfo","displayManifestations","relatedExpressions","relationLabel","displayRelatedExpressions","WindowNavBar","Nav_default","focusSet","Item","Link","handleTabChange","windowId","openWidthHeight","handleMinimize","handleMiddlize","handleMaximize","handleClose","altWindowState","handleDuplicateWindow","windowType","NextPrevBar","handleBlockFocusChange","TextCompareItem","handleToggleShow","mounted","compareText","rawText","show","base","transcription","dmp","Diff","diff_match_patch","diff","diff_main","diff_cleanupSemantic","ds","diff_prettyHtml","createCompare","compareTranscription","handleChangeBase","ref","TextCompare","handleToggleShowAll","baseText","manifestationCTranscription","structureType","cdoc","cxml","topLevelExpression","cmanifestation","ctranscription","arrangeTextInfo","isMainText","getTextInfo","components_TextCompareItem","displayComparisons","TextCompareWrapper","handleCompare","handleToggleCompare","getText","expressions","newExpressions","objectSpread","exObject","keys","components_TextCompare","displayExpressions","CommentItem","n","CommentCreate","handleCommentUpdate","handleSubmitComment","comment","handleSumbitComment","Comments","notifications","annotat","@context","uuidv4","motivation","method","config","headers","Content-Type","response","retrieveComments","components_CommentCreate","components_CommentItem","Citation","toggleAlternativeManifestations","toggleCitationExplanation","eurl","etitle","murl","mtitle","turl","showAlternativeManifestations","showCitationExplanation","transcriptionid","allBindings","expression","eLongTitle","authorTitle","author","datasource","codexTitle","start","end","retrieveCitation","fullCitationString","href","rel","handleFocusChange","TextOutline","handleToggleChildren","parts","showChildren","getChildParts","newData","part","level","questionTitle","retrieveParts","membersOf","indent","paddingLeft","bold","collectionLink","mtFocus","p","focusResourceid","TextOutlineWrapper","getMembersOf","memberOf","retrieveMembersOf","components_TextOutline","Window","windowLoad","components_WindowNavBar","focus","handleSwitchWindow","components_NextPrevBar","components_TextCompareWrapper","components_Info","components_Citation","components_Surface2","components_Surface3Wrapper","components_Comments","components_XmlView","itemFocus","components_TextOutlineWrapper","components_SearchWrapper","TextNavBar","Navbar_default","bg","expand","fixed","Toggle","aria-controls","Collapse","Text","retrieveText","doc","scrollTo","docFragment","topLevelFragment","xslurl","all","xsltProcessor","importStylesheet","resultDocument","transformToFragment","convertXMLDoc","getElementById","innerHTML","click","parent","attr","setFocus","openWindow","paragraphid","closest","ln","handleLineFocusChange","mouseover","link","html","noteDisplay","mouseout","window","location","prevProps","VersionChain","getVersionHistory","handleToggleShowVersions","versions","currentVersion","showVersions","transcriptionUri","reviewUrl","reviewObject","img_url","reviewid","ipfsHash","html_link","rubric_link","summary","newVersion","versionTranscription","version","versionLabel","version_label","versionOrderNumber","order_number","versionReview","review","versionDoc","versionReviewInfo","_this4","Alert_default","v","currentlyViewing","displayAlert","TextWrapper","setFocus2","windows","window1","position","window2","blockFocus","altWindowId","fullid","handleUpdateUrlResource","newid","arrangeFocusInfo","isRelatedTo","longTitle","arrangeItemFocusInfo","itemFocusInfo","xml","t","setItemFocus","mFocus","tFocus","blockDivFocus","retrieveFocusInfo","components_VersionChain","aSideWindowOpen","textClass","components_Text","components_TextNavBar","components_Window","item","Collection","retrieveCollectionInfo","makeRequests","handleFilter","filter","createRef","items","partsPromise","partsObject","pId","partTitle","partType","partQuestionTitle","partLevel","itemsPromise","itemsObject","itemId","itemTitle","itemType","itemQuestionTitle","itemAuthor","itemAuthorTitle","cm","cmTitle","ct","err","expressionsInfo","partsInfo","arrangeParts","arrangeItems","collectionInfo","newResourceId","retrieveWorkGroupInfo","current","questions","toLowerCase","push","components_Item","testPart","Table_default","striped","bordered","hover","displayParts","displayQuestions","AuthorCollection","retrieveAuthorCollectionInfo","handleItemFilter","itemFilter","authorArticles","textArticles","Array","isArray","authorArticle","autherArticle","textArticle","hasTopLevelExpression","authorid","authorCollectionInfo","refs","displayItems","list","Codex","retrieveCodexInfo","handleToggleShowContents","focusedSurface","relatedCodices","showContents","codexid","getCodexInfo","unique","indexOf","expressionList","expressionTitle","item_expression_title","surface_title","item_expression_question_title","TextSwitch","displayType","itemTranscriptionId","resourceTitle","history","search","itemParent","getItemTranscriptionFromBlockDiv","blockDivExpression","Qs","parse","ignoreQueryPrefix","getInfo","components_AuthorCollection","components_Collection","components_TextWrapper","itemid","components_Codex","About","CodexListItem","Codices","codices","arrangeCodexInfo","codex","codex_title","retrieveCodices","components_CodexListItem","NavBar","Footer","Row_default","Col_default","AppRouter","forceRefresh","components_NavBar","react_router","path","exact","component","render","assign","components_Footer","Boolean","hostname","match","ReactDOM","components_AppRouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22a852cd.chunk.js","sourcesContent":["//export const sparqlEndpoint = \"http://localhost:3030/ds/query\"\nexport const sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n\nexport const resourceEndpoint = \"http://scta.info/resource/scta\"\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-router-dom';\nimport {resourceEndpoint} from './config';\n\n\n\nfunction Home(props) {\n  //const resourceid = props.location ? Qs.parse(props.location.search, { ignoreQueryPrefix: true }).resourceid : null;\n  const displayBody = () => {\n    // if (resourceid){\n    //   return <Text resourceid={props.location.search.resourceid}/>\n    // }\n    // else\n    return (\n      <div className=\"Home\">\n        <Container id=\"lbp-home\" fluid>\n            <Container>\n              <Jumbotron id=\"lbp-jumbo\">\n              \t<h1>The SCTA Reading Room</h1>\n              \t<p>A site for reading, viewing, and studying the scholastic tradition</p>\n                <Button><Link className=\"nav-link\" to={\"/text?resourceid=\" + resourceEndpoint} style={{color: \"black\"}}>Enter</Link></Button>\n              </Jumbotron>\n            </Container>\n          </Container>\n          </div>\n    )\n  }\n  return (\n    displayBody()\n  )\n}\n\nexport default Home;\n","import React from 'react';\nimport Axios from 'axios'\nimport {Link} from 'react-router-dom';\n\nclass Search extends React.Component {\n  constructor(props){\n    super(props)\n    this.retrieveResults = this.retrieveResults.bind(this)\n    this.state = {\n      searchResults: [],\n      count: \"\"\n    }\n  }\n  retrieveResults(query, expressionid){\n    const _this = this\n    Axios.get(\"http://exist.scta.info/exist/apps/scta-app/jsonsearch/json-search-text-by-expressionid.xq?query=\" + query + \"&expressionid=\" + expressionid)\n      .then((d) => {\n            _this.setState({searchResults: d.data.results, count: d.data.count})\n          })\n  }\n  componentDidMount(){\n    // const query = Qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).query\n    // const eid = Qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).eid\n    const query = this.props.query\n    const eid =  this.props.eid\n\n    this.retrieveResults(query, eid)\n  }\n  componentWillReceiveProps(nextProps){\n    const query = nextProps.query\n    const eid =  nextProps.eid\n    this.retrieveResults(query, eid)\n  }\n  render(){\n    const displayResults = () => {\n      if (!this.state.searchResults){\n        return (<div>\n          <p>No results found</p>\n        </div>)\n      }\n      else if (this.state.searchResults.length > 1){\n        const results = this.state.searchResults.map((r, i) => {\n          return (\n            <div key={i}>\n            <p><Link to={\"/text?resourceid=http://scta.info/resource/\" + r.pid}>{r.pid}</Link></p>\n            <p dangerouslySetInnerHTML={{ __html: r.text}}/>\n            </div>\n          )\n\n        })\n      return results\n    }\n    else if (this.state.searchResults){\n      return (\n        <div key={this.state.searchResults.pid}>\n        <p><Link to={\"/text?resourceid=http://scta.info/resource/\" + this.state.searchResults.pid}>{this.state.searchResults.pid}</Link></p>\n        <p dangerouslySetInnerHTML={{ __html: this.state.searchResults.text}}/>\n        </div>\n      )\n    }\n    else{\n      return (\n        <div><p>No results</p></div>\n      )\n    }\n  }\n  return (\n    <div>\n    {displayResults()}\n    </div>\n\n\n  );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nclass SearchQuery extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleQueryUpdate = this.handleQueryUpdate.bind(this)\n    this.handleEidUpdate = this.handleEidUpdate.bind(this)\n    this.handleRunSearch = this.handleRunSearch.bind(this)\n    this.state = {\n      query: \"\",\n      eid: \"\",\n    }\n  }\n  handleQueryUpdate(e){\n    e.preventDefault()\n\n    this.setState({query: e.target.value})\n\n  }\n  handleEidUpdate(e){\n    e.preventDefault()\n    this.setState({eid: e.target.value})\n\n  }\n  handleRunSearch(e){\n    e.preventDefault()\n    this.props.handleRunSearch(this.state.query, this.state.eid)\n  }\n  componentDidMount(){\n    this.props.eid && this.setState({eid: this.props.eid})\n  }\n  componentWillReceiveProps(nextProps){\n    nextProps.eid && this.setState({eid: nextProps.eid})\n  }\n  render(){\n    return (\n      <div>\n       <Form onSubmit={this.handleRunSearch}>\n        <FormControl type=\"text\" id=\"query\" placeholder=\"query\" className=\"mr-sm-2\" onChange={this.handleQueryUpdate} />\n        {!this.props.eid &&<FormControl type=\"text\" id=\"eid\" placeholder=\"eid\" className=\"mr-sm-2\" onChange={this.handleEidUpdate} />}\n        <Button type=\"submit\" variant=\"outline-success\">Search</Button>\n      </Form>\n\n      </div>\n    )\n  }\n}\n\nexport default SearchQuery;\n","import React from 'react';\nimport Search from \"./Search\"\nimport SearchQuery from \"./SearchQuery\"\n\nclass SearchWrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleRunSearch = this.handleRunSearch.bind(this)\n    this.state = {\n      query: \"\",\n      eid: \"\",\n    }\n  }\n  handleRunSearch(query, eid){\n    this.setState({query: query, eid: eid})\n  }\n  componentDidMount(){\n\n  }\n  componentWillReceiveProps(){\n\n  }\n  render(){\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n        <h1>Search</h1>\n        <SearchQuery handleRunSearch={this.handleRunSearch} eid={this.props.topLevel ? this.props.topLevel.split(\"/resource/\")[1] : null}/>\n        {this.state.query && <Search query={this.state.query} eid={this.state.eid}/>}\n      </div>\n    )\n  }\n}\n\nexport default SearchWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Image(props) {\n  let newCoords = \"\"\n  if (props.coords){\n    const coordsSplitArray = props.coords.split(\",\")\n    const x = parseInt(coordsSplitArray[0]) - 20\n    const y = coordsSplitArray[1]\n    const w = parseInt(coordsSplitArray[2]) + 40\n    const h = coordsSplitArray[3]\n    newCoords = x + \",\" + y + \",\" + w + \",\" + h\n  }\n\n  const imageLink = props.imageUrl + \"/\" + newCoords + \"/\" + props.displayWidth + \",/0/default.jpg\"\n  return (\n    <img alt=\"manuscript\" src={imageLink}/>\n  );\n}\n\nImage.propTypes = {\n  /**\n  * the Url for the image resource\n  **/\n  imageUrl: PropTypes.string.isRequired,\n  /**\n  * width of the image to be displayed\n  *\n  * TODO: might be better to make this a number/integer and not required;\n  * when not preset perhaps it should just default to the widths listed in the coords\n  **/\n  displayWidth: PropTypes.string.isRequired,\n  /**\n  * string in the form of \"x,y,w,h\"\n  *\n  **/\n  coords: PropTypes.string.isRequired\n}\nexport default Image;\n","import React from 'react';\n\nfunction LineText(props) {\n  return (\n    <div className=\"text\" style={{\"whiteSpace\": \"nowrap\"}}>\n     <span dangerouslySetInnerHTML={{__html: props.text}} />\n    </div>\n  );\n}\n\nexport default LineText;\n","// Note this component is a near duplicate of Image Text Wrapper in Paleographinator\n// TODO: This shoud be the target for a refactored independent React Component\n\nimport React, { Component } from 'react';\nimport Image from './Image';\nimport LineText from './LineText';\n\nclass ImageTextWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    // const getClass = () => {\n    //   if (this.props.targetLabel === this.props.label){\n    //     return \"ImageTextWrapper target\"\n    //   }\n    //   else {\n    //     return \"ImageTextWrapper\"\n    //   }\n    // }\n    return (\n      <div className={this.props.targetLabel === this.props.label ? \"ImageTextWrapper target\" : \"ImageTextWrapper\"}>\n        <div className=\"labelImageWrapper\">\n\n        <Image\n          imageUrl={this.props.imageUrl}\n          canvas={this.props.canvas}\n          coords={this.props.coords}\n          canvasShort={this.props.canvasShort}\n          displayWidth={this.props.displayWidth}\n          />\n        </div>\n        <LineText text={this.props.text}/>\n      </div>\n    );\n  }\n}\n\nexport default ImageTextWrapper;\n","import Axios from 'axios'\nimport {sparqlEndpoint} from './config';\nimport $ from 'jquery';\n\nexport function loadXMLDoc(url){\n  //See https://github.com/martin-honnen/martin-honnen.github.io/blob/master/xslt/arcor-archive/2016/test2016081501.html\n  return new Promise(function(resolve) {\n    var req = new XMLHttpRequest();\n    req.open(\"GET\", url);\n    if (typeof XSLTProcessor === 'undefined') {\n     try {\n       req.responseType = 'msxml-document';\n     }\n     catch (e) {\n       console.log('error', e)\n     }\n    }\n    req.onload = function() {\n     resolve(this.responseXML)\n    }\n    req.send();\n  });\n}\n\nexport function convertXMLDoc(xmlurl, xslurl){\n  //See https://github.com/martin-honnen/martin-honnen.github.io/blob/master/xslt/arcor-archive/2016/test2016081501.html\n  return new Promise(function(resolve){\n    Promise.all([loadXMLDoc(xmlurl), loadXMLDoc(xslurl)]).then(function(data) {\n      const xsltProcessor = new XSLTProcessor();\n      xsltProcessor.importStylesheet(data[1]);\n      const resultDocument = xsltProcessor.transformToFragment(data[0], document);\n      resolve(resultDocument)\n    })\n  })\n}\n\nexport function nsResolver(prefix) {\n    if(prefix === \"tei\") {\n      return 'http://www.tei-c.org/ns/1.0'\n    }\n}\n\nexport function copyToClipboard(string){\n  var dummy = document.createElement(\"textarea\");\n  document.body.appendChild(dummy);\n  dummy.value = string;\n  dummy.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(dummy);\n}\n\nexport function runQuery(query){\n  //const sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n  //const sparqlEndpoint = sparqlEndpoint\n  const queryPromise = Axios.get(sparqlEndpoint, { params: { \"query\": query, \"output\": \"json\" } })\n  return queryPromise\n}\n\n//handles scroll to paragraph procedure\nexport function scrollToParagraph(hash, highlight){\n    const element = $(\"#\" + hash);\n\n    // TODO: highlighting is NOT working\n    if (highlight){\n      element.addClass(\"highlightNone\");\n      $(\".paragraphnumber\").removeClass(\"highlight2\")\n      $(\".plaoulparagraph\").removeClass(\"highlightNone\")\n      $(\".plaoulparagraph\").removeClass(\"highlight\")\n      element.children(\".paragraphnumber\").addClass(\"highlight2\")\n      element.addClass( \"highlight\");\n      setTimeout(function(){\n        element.addClass(\"highlightNone\");\n    }, 2000);\n\n    }\n  \tif (element.length > 0) {\n  \t    $('html, body')\n              .stop()\n              .animate({\n                  scrollTop: element.offset().top - 100\n              }, 1000);\n     }\n\n  }\n","//note; each query here represents an attempt an efficient single request for related information\n//each query therefore could be tranformed into a restful api\n\n\n export function getRelatedExpressions(itemExpressionUri){\n   const query = [\n     \"SELECT DISTINCT ?isRelatedTo ?label \",\n     \"WHERE { \",\n     \"{\",\n     \"<\" + itemExpressionUri + \"> ?o ?isRelatedTo .\",\n     \"?o a <http://scta.info/resource/textRelation> .\",\n     \"?o <http://www.w3.org/1999/02/22-rdf-syntax-ns#label> ?label . \",\n     \"?isRelatedTo a <http://scta.info/resource/expression> .\",\n     \"}\",\n     \"UNION\",\n     \"{\",\n     \"<\" + itemExpressionUri + \"> ?o ?p .\",\n     \"?o a <http://scta.info/resource/textRelation> .\",\n     \"?o <http://www.w3.org/1999/02/22-rdf-syntax-ns#label> ?label . \",\n     \"?p a <http://scta.info/resource/quotation> .\",\n     \"?p <http://scta.info/property/source> ?isRelatedTo .\",\n     \"}\",\n     \"}\"\n   ].join('');\n     return query\n }\n//get Related Expressions\n// export function getRelatedExpressions(itemExpressionUri){\n//   const query = [\n//     \"SELECT DISTINCT ?isRelatedTo \",\n//     \"WHERE { \",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/isRelatedTo> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/quotes> ?quote .\",\n//     \"?quote a <http://scta.info/resource/quotation> .\",\n//     \"?quote <http://scta.info/property/source> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/quotes> ?quote .\",\n//     \"?quote a <http://scta.info/resource/expression> .\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/quotes> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/quotedBy> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/abbreviates> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/abbreviatedBy> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/references> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/referencedBy> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/copies> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/isCopiedBy> ?isRelatedTo .\",\n//     \"}\",\n//     \"}\"\n//   ].join('');\n//\n//     return query\n// }\n\n// query info block, division, or item (possible also collection)\nexport function basicInfoQuery(itemExpressionUri){\n  const query = [\n    \"SELECT DISTINCT ?title ?structureType ?cmanifestation ?cmanifestationTitle ?manifestation ?manifestationTitle ?ctranscription ?manifestationCTranscription ?cdoc ?cxml ?expressionShortId ?longTitle ?topLevelExpression ?next ?previous ?inbox ?author ?authorTitle \",\n    \"WHERE { \",\n    \"<\" + itemExpressionUri + \"> <http://purl.org/dc/elements/1.1/title> ?title .\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/structureType> ?structureType .\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/hasCanonicalManifestation> ?cmanifestation .\",\n    \"?cmanifestation <http://purl.org/dc/elements/1.1/title> ?cmanifestationTitle .\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/hasManifestation> ?manifestation .\",\n    \"?manifestation <http://purl.org/dc/elements/1.1/title> ?manifestationTitle .\",\n    \"?manifestation <http://scta.info/property/hasCanonicalTranscription> ?manifestationCTranscription .\",\n    \"?cmanifestation <http://scta.info/property/hasCanonicalTranscription> ?ctranscription .\",\n    \"?ctranscription <http://scta.info/property/hasDocument> ?cdoc . \",\n    \"?ctranscription <http://scta.info/property/hasXML> ?cxml . \",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/shortId> ?expressionShortId .\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/isPartOfTopLevelExpression> ?topLevelExpression .\",\n    \"OPTIONAL {\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/longTitle> ?longTitle .\",\n    \"}\",\n    \"OPTIONAL {\",\n    \"?topLevelExpression <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n    \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n    \"}\",\n\n    \"OPTIONAL {\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/next> ?next .\",\n    \"}\",\n    \"OPTIONAL {\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/previous> ?previous .\",\n    \"}\",\n    \"<\" + itemExpressionUri + \"> <http://www.w3.org/ns/ldp#inbox> ?inbox . \",\n    \"}\",\n    \"ORDER BY ?title\"].join('');\n\n    return query\n  }\n\n  export function itemTranscriptionInfoQuery(itemTranscriptionUri){\n    const query = [\n      \"SELECT DISTINCT ?title ?manifestation ?doc ?xml ?expression ?expressionShortId ?longTitle ?topLevelExpression ?next ?previous ?inbox ?t \",\n      \"WHERE { \",\n      \"BIND(<\" + itemTranscriptionUri + \"> as ?t) . \",\n      \"?t <http://purl.org/dc/elements/1.1/title> ?title .\",\n      \"?t <http://scta.info/property/isTranscriptionOf> ?manifestation .\",\n      \"?t <http://scta.info/property/hasDocument> ?doc . \",\n      \"?t <http://scta.info/property/hasXML> ?xml . \",\n      \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n      \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n      \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n      \"?expression <http://scta.info/property/longTitle> ?longTitle .\",\n      \"?expression <http://scta.info/property/isPartOfTopLevelExpression> ?topLevelExpression .\",\n      \"OPTIONAL {\",\n      \"?expression <http://scta.info/property/next> ?next .\",\n      \"}\",\n      \"OPTIONAL {\",\n      \"?expression <http://scta.info/property/previous> ?previous .\",\n      \"}\",\n      \"?expression <http://www.w3.org/ns/ldp#inbox> ?inbox . \",\n      \"}\",\n      \"ORDER BY ?expressionTitle\"].join('');\n\n      return query\n    }\n  // gets all structure items with basic item information\n  export function basicStructureAllItemsInfoQuery(topLevelExpressionUrl){\n    const query = [\n      \"SELECT DISTINCT ?item ?itemTitle ?topLevel ?itemQuestionTitle ?cm ?cmTitle ?ct ?next ?previous ?itemType ?doc \",\n      \"WHERE { \",\n      \"<\" + topLevelExpressionUrl + \"> <http://scta.info/property/hasStructureItem> ?item .\",\n      \"?item <http://scta.info/property/isPartOfTopLevelExpression> ?topLevel .\",\n      \"?item <http://purl.org/dc/elements/1.1/title> ?itemTitle .\",\n      \"?item <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?itemType . \",\n      \"OPTIONAL {\",\n      \"?item <http://scta.info/property/questionTitle> ?itemQuestionTitle .\",\n      \"}\",\n      \"OPTIONAL\",\n      \"{\",\n      \"?item <http://scta.info/property/next> ?next .\",\n      \"}\",\n      \"OPTIONAL\",\n      \"{\",\n      \"?item <http://scta.info/property/previous> ?previous .\",\n      \"}\",\n      \"?item <http://scta.info/property/hasCanonicalManifestation> ?cm .\",\n      \"?item <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n      \"?cm <http://purl.org/dc/elements/1.1/title> ?cmTitle .\",\n      \"?cm <http://scta.info/property/hasCanonicalTranscription> ?ct .\",\n      \"?ct <http://scta.info/property/hasDocument> ?doc .\",\n      \"}\",\n      \"ORDER BY ?totalOrderNumber\"].join('');\n      return query\n    }\n    // gets all parts\n    export function partsInfoQuery(resourceurl){\n      const query = [\n        \"SELECT DISTINCT ?part ?partTitle ?partQuestionTitle ?partType ?partLevel \",\n        \"WHERE { \",\n        \"<\" + resourceurl + \"> <http://purl.org/dc/terms/hasPart> ?part .\",\n        \"?part <http://purl.org/dc/elements/1.1/title> ?partTitle .\",\n        \"?part <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?partType . \",\n        \"OPTIONAL {\",\n        \"?part <http://scta.info/property/questionTitle> ?partQuestionTitle .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?part <http://scta.info/property/level> ?partLevel .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?part <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n        \"}\",\n        \"}\",\n        \"ORDER BY ?totalOrderNumber\"].join('');\n        return query\n      }\n    // gets all expressions for work Group\n    export function workGroupExpressionQuery(resourceurl){\n      const query = [\n        \"SELECT DISTINCT ?item ?itemTitle ?itemAuthor ?itemAuthorTitle ?itemType \",\n        \"WHERE { \",\n        \"<\" + resourceurl + \"> <http://scta.info/property/hasExpression> ?item .\",\n        \"?item <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?itemType . \",\n        \"?item <http://purl.org/dc/elements/1.1/title> ?itemTitle .\",\n        \"?item <http://www.loc.gov/loc.terms/relators/AUT> ?itemAuthor .\",\n        \"?itemAuthor <http://purl.org/dc/elements/1.1/title> ?itemAuthorTitle .\",\n        \"}\",\n        \"ORDER BY ?itemAuthorTitle\"].join('');\n        return query\n      }\n\n  export function getItemTranscription(resourceurl){\n    const query = [\n      \"SELECT DISTINCT ?ctranscription \",\n      \"WHERE { \",\n        \"{\",\n          \"<\" + resourceurl + \"> <http://scta.info/property/hasCanonicalManifestation> ?cmanifestation . \",\n          \"?cmanifestation <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"<\" + resourceurl + \"> <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n        \"}\",\n      \"}\"].join('');\n      return query\n  }\n  export function getItemTranscriptionFromBlockDiv(resourceurl){\n    const query = [\n      \"SELECT DISTINCT ?ctranscription ?blockDivExpression \",\n      \"WHERE { \",\n        \"OPTIONAL\",\n        \"{\",\n        \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfStructureItem> ?itemParent . \",\n        \"{\",\n          \"{\",\n            \"?itemParent <http://scta.info/property/hasCanonicalManifestation> ?cmanifestation . \",\n            \"?cmanifestation <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n          \"}\",\n          \"UNION\",\n          \"{\",\n            \"?itemParent <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n          \"}\",\n        \"}\",\n        \"}\",\n        \"OPTIONAL\",\n        \"{\",\n        \"{\",\n          \"{\",\n            \"<\" + resourceurl + \"> <http://scta.info/property/isManifestationOf> ?blockDivExpression . \",\n          \"}\",\n          \"UNION\",\n          \"{\",\n            \"<\" + resourceurl + \"> <http://scta.info/property/isTranscriptionOf> ?blockDivManifestation . \",\n            \"?blockDivManifestation <http://scta.info/property/isManifestationOf> ?blockDivExpression . \",\n          \"}\",\n        \"}\",\n        \"}\",\n      \"}\"].join('');\n      return query\n  }\n  //TODO rename to getType\n  export function getStructureType(resourceurl){\n    const query = [\n      \"SELECT DISTINCT ?type ?structureType ?level ?topLevel ?itemParent ?resourceTitle ?author \",\n      \"WHERE { \",\n      \"<\" + resourceurl + \"> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . \",\n      \"OPTIONAL {\",\n        \"<\" + resourceurl + \"> <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n      \"}\",\n      \"OPTIONAL {\",\n        \"<\" + resourceurl + \"> <http://purl.org/dc/elements/1.1/title> ?resourceTitle .\",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/structureType> ?structureType . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/level> ?level . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfTopLevelExpression> ?topLevel . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfTopLevelManifestation> ?topLevel . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfTopLevelTransription> ?topLevel . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfStructureItem> ?itemParent . \",\n      \"}\",\n      \"}\"].join('');\n      return query\n    }\n  //surface id query, gets canvas and manifestation\n  export function getSurfaceInfo(surfaceid){\n    const query = [\n      \"SELECT DISTINCT ?surfaceTitle ?isurface ?isurfaceTitle ?icodexTitle ?canvas ?imageurl ?next_surface ?previous_surface \",\n        \"{\",\n  \t\t\t\t\"<\" + surfaceid + \"> <http://purl.org/dc/elements/1.1/title> ?surfaceTitle .\",\n  \t\t\t\t\"<\" + surfaceid + \"> <http://scta.info/property/hasISurface> ?isurface .\",\n  \t\t\t\t\"OPTIONAL {\",\n  \t\t\t\t\t\"<\" + surfaceid + \"> <http://scta.info/property/next> ?next_surface .\",\n  \t\t\t\t\"}\",\n  \t\t\t\t\"OPTIONAL {\",\n  \t\t\t\t\t\"<\" + surfaceid + \"> <http://scta.info/property/previous> ?previous_surface .\",\n          \"}\",\n  \t\t\t\t\"OPTIONAL {\",\n  \t\t\t\t\t\"?isurface <http://purl.org/dc/elements/1.1/title> ?isurfaceTitle .\",\n  \t\t\t\t\t\"?isurface <http://purl.org/dc/elements/1.1/isPartOf> ?icodex .\",\n  \t\t\t\t\t\"?icodex <http://purl.org/dc/elements/1.1/title> ?icodexTitle .\",\n  \t\t\t\t\"}\",\n  \t\t\t\t\"?isurface <http://scta.info/property/hasCanvas> ?canvas .\",\n  \t\t\t\t\"OPTIONAL{\",\n  \t\t\t\t\t\"?canvas <http://iiif.io/api/presentation/2#hasImageAnnotations> ?blank .\",\n  \t\t\t\t\"}\",\n  \t\t\t\t\"OPTIONAL{\",\n  \t\t\t\t\"?canvas <http://www.w3.org/2003/12/exif/ns#height> ?c_height .\",\n          \"}\",\n  \t\t     \"?blank <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> ?o .\",\n  \t\t     \"?o <http://www.w3.org/ns/oa#hasBody> ?o2 .\",\n  \t\t    \"OPTIONAL{\",\n  \t\t\t\t\t \"?o2 <http://rdfs.org/sioc/services#has_service> ?imageurl .\",\n  \t\t\t\t \"}\",\n  \t\t\t\t \"OPTIONAL{\",\n  \t\t\t\t\t \"?o2 <http://www.shared-canvas.org/ns/hasRelatedService> ?imageurl .\",\n  \t\t\t\t \"}\",\n        \"}\"].join('');\n\n      return query\n    }\n\n//surface id query, gets canvas and manifestation\nexport function getAuthorInformation(authorid){\n    const query = [\n      \"CONSTRUCT\",\n      \"{\",\n      \"?author  <http://purl.org/dc/elements/1.1/title> ?authorTitle ;\",\n      \"<http://scta.info/resource/hasTopLevelExpression> ?expression ;\",\n      \"<http://scta.info/property/authorArticle> ?authorArticle;\",\n      \"<http://scta.info/property/textArticle> ?textArticle .\",\n    \t\"?authorArticle <http://purl.org/dc/elements/1.1/title> ?authorArticleTitle . \",\n      \"?textArticle <http://purl.org/dc/elements/1.1/title> ?textArticleTitle . \",\n    \t\"?expression <http://purl.org/dc/elements/1.1/title> ?topLevelExpressionTitle .\",\n      \"}\",\n      \"WHERE \",\n      \"{\",\n      \"<\" + authorid + \"> <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n      \"BIND(<\" + authorid + \"> as ?author) . \",\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n      \"?expression a <http://scta.info/resource/expression> .\",\n      \"?expression <http://scta.info/property/level> '1' .\",\n      \"?expression <http://purl.org/dc/elements/1.1/title> ?topLevelExpressionTitle .\",\n      \"?expression2 <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n      \"?textArticle <http://scta.info/property/isArticleOf> ?expression2 .\",\n      \"?textArticle <http://purl.org/dc/elements/1.1/title> ?textArticleTitle .\",\n      \"?authorArticle <http://scta.info/property/isArticleOf> ?author .\",\n      \"?authorArticle <http://purl.org/dc/elements/1.1/title> ?authorArticleTitle\",\n      \"}\"].join('');\n      return query\n      }\n\n  export function versionHistoryInfo(transcriptionUri){\n     \t \tconst query = [\n     \t \t\t\"SELECT ?version ?version_shortId ?order_number ?version_label ?review ?doc\",\n     \t    \"{\",\n            \"{\",\n               \"BIND(<\" + transcriptionUri + \"> as ?version) . \",\n     \t         \"?version <http://scta.info/property/shortId> ?version_shortId .\",\n               \"?version <http://scta.info/property/hasDocument> ?doc . \",\n     \t         \"?version <http://scta.info/property/versionOrderNumber> ?order_number .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/versionLabel> ?version_label .\",\n     \t\t\t\t\t \"OPTIONAL {\",\n     \t\t\t\t\t \t\"?version <http://scta.info/property/hasReview> ?review .\",\n     \t\t\t\t   \"}\",\n     \t\t\t\t \"}\",\n     \t       \"UNION\",\n            \"{\",\n     \t         \"<\" + transcriptionUri + \"> <http://scta.info/property/hasAncestor> ?version .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/shortId> ?version_shortId .\",\n               \"?version <http://scta.info/property/hasDocument> ?doc . \",\n     \t         \"?version <http://scta.info/property/versionOrderNumber> ?order_number .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/versionLabel> ?version_label .\",\n     \t\t\t\t\t \"OPTIONAL {\",\n     \t\t\t\t\t \t\"?version <http://scta.info/property/hasReview> ?review .\",\n     \t\t\t\t   \"}\",\n     \t\t\t\t \"}\",\n     \t       \"UNION\",\n     \t       \"{\",\n     \t         \"<\" + transcriptionUri + \"> <http://scta.info/property/hasDescendant> ?version .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/shortId> ?version_shortId .\",\n               \"?version <http://scta.info/property/hasDocument> ?doc . \",\n     \t         \"?version <http://scta.info/property/versionOrderNumber> ?order_number .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/versionLabel> ?version_label .\",\n     \t\t\t\t\t \"OPTIONAL {\",\n     \t\t\t\t\t \t\"?version <http://scta.info/property/hasReview> ?review .\",\n     \t\t\t\t   \"}\",\n     \t\t\t\t \"}\",\n     \t     \"}\",\n     \t     \"ORDER BY DESC(?order_number)\"].join('');\n           return query\n           }\n\n  //gets lines and zone order for\n  export function getBlockLines(manifestationBlockId){\n     const query = [\n       \"SELECT ?first ?last ?order ?surface\",\n       \"{\",\n         \"<\" + manifestationBlockId + \"> <http://scta.info/property/isOnZone> ?zone . \",\n         \"?zone <http://scta.info/property/isOnZone> ?zone2 .\",\n         \"?zone2 <http://scta.info/property/firstLine> ?first .\",\n         \"?zone2 <http://scta.info/property/lastLine> ?last .\",\n         \"?zone2 <http://scta.info/property/isPartOfSurface> ?surface .\",\n         \"?zone <http://scta.info/property/isOnZoneOrder> ?order .\",\n       \"}\"].join('');\n       return query\n     }\n\n   //gets lines and zone order for\n   export function getChildParts(resourceid){\n      const query = [\n        \"SELECT ?part ?title ?level ?order ?structureType ?questionTitle \",\n        \"{\",\n          \"<\" + resourceid + \"> <http://purl.org/dc/terms/hasPart> ?part . \",\n          \"?part <http://purl.org/dc/elements/1.1/title> ?title .\",\n          \"?part <http://scta.info/property/level> ?level .\",\n          \"?part <http://scta.info/property/structureType> ?structureType .\",\n          \"OPTIONAL\",\n          \"{\",\n          \"?part <http://scta.info/property/sectionOrderNumber> ?order .\",\n          \"}\",\n          \"OPTIONAL\",\n          \"{\",\n          \"?part <http://scta.info/property/questionTitle> ?questionTitle .\",\n          \"}\",\n        \"}\",\n        \"ORDER BY ?order\"].join('');\n        return query\n      }\n      //gets lines and zone order for\n    export function getMembersOf(resourceid){\n       const query = [\n         \"SELECT ?memberOf\",\n         \"{\",\n           \"<\" + resourceid + \"> <http://scta.info/property/isMemberOf> ?memberOf . \",\n         \"}\"].join('');\n         return query\n       }\n\n    export function getManifestationCitationInfo(transcriptionid){\n       var query = [\n       \"SELECT DISTINCT ?manifestation ?manifestationTitle ?manifestationSurface ?surfaceTitle ?codexTitle ?datasource ?eLongTitle ?author ?authorTitle ?expression \",\n       \"{\",\n       \"<\" + transcriptionid + \"> <http://scta.info/property/isTranscriptionOf> ?manifestation .\",\n       \"<\" + transcriptionid + \"> <http://scta.info/property/hasDocument> ?datasource . \",\n       \"?manifestation <http://purl.org/dc/elements/1.1/title> ?manifestationTitle .\",\n       \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n       \"?expression <http://scta.info/property/isPartOfTopLevelExpression> ?topLevelExpression .\",\n       \"OPTIONAL {\",\n        \"?expression <http://scta.info/property/longTitle> ?eLongTitle\",\n      \"}\",\n       \"OPTIONAL {\",\n         \"?topLevelExpression <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n         \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n       \"}\",\n       \"OPTIONAL\",\n         \"{\",\n         \"?manifestation <http://scta.info/property/isOnSurface> ?manifestationSurface .\",\n         \"?manifestationSurface <http://purl.org/dc/elements/1.1/title> ?surfaceTitle .\",\n         \"?surface <http://scta.info/property/order> ?surface_order .\",\n         \"?codex <http://scta.info/property/hasSurface> ?manifestationSurface .\",\n         \"?codex <http://purl.org/dc/elements/1.1/title> ?codexTitle .\",\n         \"}\",\n       \"}\",\n       \"ORDER BY ?surface_order\"].join('');\n       return query\n     }\n\n    export function getCodices(){\n     const query = [\n       \"SELECT ?codex ?codex_title\",\n \t     \"{\",\n\t\t\t\t \"?codex a <http://scta.info/resource/codex> .\",\n\t\t\t\t \"?codex <http://purl.org/dc/elements/1.1/title> ?codex_title\",\n\t\t\t\t\"}\",\n\t\t\t \"ORDER BY ?codex_title\"].join('')\n       return query\n     }\n     export function getCodexInfo(codexid){\n      const query = [\n        \"SELECT DISTINCT ?expression ?codex_title ?item_expression_title ?item_expression_question_title ?surface ?surface_title ?surface_order ?manifestation ?manifestation_short_id ?status \",\n        \"{\",\n          \"<\" + codexid  + \"> <http://purl.org/dc/elements/1.1/title> ?codex_title .\",\n          \"OPTIONAL {\",\n          \"?icodex <http://scta.info/property/isCodexItemOf> <\" + codexid  + \"> .\",\n          \"?isurface <http://purl.org/dc/elements/1.1/isPartOf> ?icodex .\",\n          \"?surface <http://scta.info/property/hasISurface> ?isurface .\",\n          \"?surface <http://scta.info/property/order> ?surface_order .\",\n          \"?surface <http://purl.org/dc/elements/1.1/title> ?surface_title .\",\n          \"?manifestation <http://scta.info/property/isOnSurface> ?surface .\",\n          \"?manifestation <http://scta.info/property/structureType> <http://scta.info/resource/structureItem> .\",\n          \"?manifestation <http://scta.info/property/shortId> ?manifestation_short_id .\",\n          \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n          \"?expression <http://purl.org/dc/elements/1.1/title> ?item_expression_title .\",\n          \"?expression <http://scta.info/property/status> ?status .\",\n          \"OPTIONAL {\",\n             \"?expression <http://scta.info/property/questionTitle> ?item_expression_question_title .\",\n           \"}\",\n         \"}\",\n        \"}\",\n        \"ORDER BY ?surface_order\"].join('')\n     return query\n   }\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Axios from 'axios'\nimport Button from 'react-bootstrap/Button';\n\nimport ImageTextWrapper from './ImageTextWrapper';\n\nimport {runQuery} from './utils'\nimport {getSurfaceInfo} from './Queries'\n\n\n\nclass Surface2 extends React.Component {\n  constructor(props){\n    super(props)\n    this.mount = false\n    this.handleNext = this.handleNext.bind(this)\n    this.handlePrevious = this.handlePrevious.bind(this)\n    this.handleToggleTextLines = this.handleToggleTextLines.bind(this)\n    this.handleToggleAllLines = this.handleToggleAllLines.bind(this)\n    this.state = {\n      currentSurfaceId: \"\",\n      manifest: \"\",\n      canvas: \"\",\n      region: \"full\",\n      width: \"1000\",\n      next: \"\",\n      previous: \"\",\n      imageurl: \"\",\n      annotationsDisplay: true,\n      showAllLines: false\n    }\n\n  }\n  handleNext(){\n    //this.retrieveSurfaceInfo(this.state.next)\n    this.props.handleSurfaceFocusChange(this.state.next)\n  }\n  handlePrevious(){\n    //this.retrieveSurfaceInfo(this.state.previous)\n    this.props.handleSurfaceFocusChange(this.state.previous)\n\n  }\n  handleToggleTextLines(){\n    //this.retrieveSurfaceInfo(this.state.previous)\n    this.setState((prevState) => {\n      return {annotationsDisplay: !prevState.annotationsDisplay}\n    })\n  }\n  handleToggleAllLines(){\n    this.setState((prevState) => {\n      return {showAllLines: !prevState.showAllLines}\n    })\n  }\n  retrieveSurfaceInfo(surfaceid){\n    // manifest id should be retrieved from query\n    // this is a temporary measure until db is corrected and query is posible\n\n    //const manifest = \"http://scta.info/iiif/\" + this.props.topLevel.split(\"/resource/\")[1] + \"/\" + surfaceid.split(\"/resource/\")[1].split(\"/\")[0] + \"/manifest\";\n    const manifest = \"\";\n    const surfaceInfo = runQuery(getSurfaceInfo(surfaceid))\n    surfaceInfo.then((d) => {\n      const b = d.data.results.bindings[0]\n      //second nested async call for annotation list\n      const alUrl = \"https://exist.scta.info/exist/apps/scta-app/folio-annotaiton-list-from-simpleXmlCoordinates.xq?surfaceid=\" + surfaceid.split(\"/resource/\")[1]\n      Axios.get(alUrl).then((d2) => {\n        if (this.mount){\n            this.setState({\n              currentSurfaceId: surfaceid,\n              surfaceTitle: b.surfaceTitle.value,\n              manifest: manifest,\n              canvas: b.canvas.value,\n              imageurl: b.imageurl.value,\n              next: b.next_surface ? b.next_surface.value : \"\",\n              previous: b.previous_surface ? b.previous_surface.value : \"\",\n              annotations: d2.data ? d2.data.resources : \"\"\n          })\n        }\n      }).catch((error) => {\n        console.log(\"failed retrieving annotationlist: \", error)\n        if (this.mount){\n          this.setState({\n          currentSurfaceId: surfaceid,\n          surfaceTitle: b.surfaceTitle.value,\n          manifest: manifest,\n          canvas: b.canvas.value,\n          imageurl: b.imageurl.value,\n          next: b.next_surface ? b.next_surface.value : \"\",\n          previous: b.previous_surface ? b.previous_surface.value : \"\",\n          annotations: \"\"\n        })\n      }\n    })\n  })\n}\ncomponentDidMount(){\n  this.mount = true\n    if (this.props.surfaceid){\n      this.retrieveSurfaceInfo(this.props.surfaceid)\n    }\n  }\n  componentWillReceiveProps(nextProps){\n    if (nextProps.surfaceid){\n    this.retrieveSurfaceInfo(nextProps.surfaceid)\n    }\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n  render() {\n    const displayImages = () => {\n      if (this.state.annotations && this.state.annotationsDisplay){\n        const imageTextWrappers = this.state.annotations.map((h, i) => {\n          const text = h.resource.chars;\n          const canvas = h.on.split(\"#xywh=\")[0];\n          const canvasShort = canvas.split(\"/\")[canvas.split(\"/\").length - 1];\n          const coords = h.on.split(\"#xywh=\")[1];\n          const imageUrl = h.imageUrl\n          const label = h.label\n          if (this.state.showAllLines || (parseInt(this.props.lineFocusId.split(\"/\")[this.props.lineFocusId.split(\"/\").length - 1]) === (i + 1) ) || !this.props.lineFocusId){\n          return (\n            <ImageTextWrapper key={i}\n              imageUrl={imageUrl}\n              canvas={canvas}\n              coords={coords}\n              canvasShort={canvasShort}\n              text={text}\n              label={label}\n              targetLabel={this.props.targetLabel}\n              surfaceButton={false}\n              displayWidth={this.props.width ? this.props.width : this.state.width}\n              />\n            )\n          }\n          else{\n            return null\n          }\n\n        })\n        return imageTextWrappers\n      }\n      else{\n        const width = this.props.width ? this.props.width : this.state.width\n        return <img alt=\"manuscript\" src={this.state.imageurl + \"/\" + this.state.region + \"/\" + width + \",/0/default.jpg\"}/>\n      }\n    }\n    return (\n      <Container className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      {this.state.currentSurfaceId ?\n        <div>\n          <div className=\"surface-navigation\">\n            <p>{this.state.surfaceTitle}</p>\n            {this.props.handleSurfaceFocusChange &&\n              <div>\n              {this.state.previous && <Button size=\"sm\" onClick={this.handlePrevious}>Previous</Button>}\n              {this.state.next && <Button size=\"sm\" onClick={this.handleNext}>Next</Button>}\n              </div>\n            }\n            <div>\n            {this.props.lineFocusId && <Button size=\"sm\" onClick={this.handleToggleAllLines}>Show All Lines</Button>}\n            {this.state.annotations && <Button size=\"sm\" onClick={this.handleToggleTextLines}>Toggle Text Lines</Button>}\n            </div>\n          </div>\n          {displayImages()}\n        </div> : <p>No surface selected</p>}\n      </Container>\n\n    );\n  }\n\n}\n\nexport default Surface2;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Axios from 'axios'\n\nimport ImageTextWrapper from './ImageTextWrapper';\n\nimport {runQuery} from './utils'\nimport {getSurfaceInfo, getBlockLines} from './Queries'\n\n//TODO: surface 3 needs to run in a wrapper which allows the user to choose between manifestations.\n//TODO: rdf dbase needs to include first line numbers for paragraphs that start in the middle of al line.\n\nclass Surface3 extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleNext = this.handleNext.bind(this)\n    this.handlePrevious = this.handlePrevious.bind(this)\n    this.state = {\n      width: \"1000\",\n      region: \"full\",\n      surfaces: [\n      ]\n    }\n\n  }\n  handleNext(){\n    //this.retrieveSurfaceInfo(this.state.next)\n    this.props.handleSurfaceFocusChange(this.state.next)\n  }\n  handlePrevious(){\n    //this.retrieveSurfaceInfo(this.state.previous)\n    this.props.handleSurfaceFocusChange(this.state.previous)\n\n  }\n  retrieveSurfaceInfo(manifestationid){\n    // manifest id should be retrieved from query\n    // this is a temporary measure until db is corrected and query is posible\n    const blockLineInfo = runQuery(getBlockLines(manifestationid))\n    blockLineInfo.then((d1) => {\n      d1.data.results.bindings.forEach((z) => {\n      const surfaceid = z.surface.value\n      const firstLine = z.first.value\n      const lastLine = z.last.value\n      const order = z.order.value\n      //const manifest = \"http://scta.info/iiif/\" + this.props.topLevel.split(\"/resource/\")[1] + \"/\" + surfaceid.split(\"/resource/\")[1].split(\"/\")[0] + \"/\" + \"manifest\";\n      const surfaceInfo = runQuery(getSurfaceInfo(surfaceid))\n      surfaceInfo.then((d) => {\n        const b = d.data.results.bindings[0]\n        //second nested async call for annotation list\n        const alUrl = \"https://exist.scta.info/exist/apps/scta-app/folio-annotaiton-list-from-simpleXmlCoordinates.xq?surfaceid=\" + surfaceid.split(\"/resource/\")[1]\n        Axios.get(alUrl).then((d2) => {\n          //const resources = d2.data.resources\n            this.setState((prevState) => {\n              const newSurface = {\n                currentSurfaceId: surfaceid,\n                surfaceTitle: b.surfaceTitle ? b.surfaceTitle.value : \"\",\n                //manifest: manifest,\n                canvas: b.canvas.value,\n                imageurl: b.imageurl.value,\n                next: b.next_surface ? b.next_surface.value : \"\",\n                previous: b.previous_surface ? b.previous_surface.value : \"\",\n                annotations: d2.data ? d2.data.resources : \"\",\n                surfaceid: surfaceid,\n                firstLine: firstLine,\n                lastLine: lastLine,\n                order: order\n\n              }\n            return {\n              surfaces: [\n                ...prevState.surfaces,\n                newSurface\n\n              ]\n            }\n          })\n        }).catch((error) => {\n            console.log(\"failed retrieving annotationlist: \", error)\n            this.setState((prevState) => {\n              const newSurface = {\n                currentSurfaceId: surfaceid,\n                surfaceTitle: b.surfaceTitle.value,\n                //manifest: manifest,\n                canvas: b.canvas.value,\n                imageurl: b.imageurl.value,\n                next: b.next_surface ? b.next_surface.value : \"\",\n                previous: b.previous_surface ? b.previous_surface.value : \"\",\n                annotations: \"\",\n                surfaceid: surfaceid,\n                firstLine: firstLine,\n                lastLine: lastLine,\n                order: order\n\n              }\n            return {\n              surfaces: [\n                ...prevState.surfaces,\n                newSurface\n              ]\n            }\n          })\n        })\n      })\n    })\n  })\n}\ncomponentDidMount(){\n    if (this.props.manifestationid){\n      this.setState((prevState) => {\n        return {\n          surfaces: []\n        }\n      },\n      this.retrieveSurfaceInfo(this.props.manifestationid)\n    )\n    }\n  }\n  componentWillReceiveProps(nextProps){\n    if (nextProps.manifestationid !== this.props.manifestationid){\n      this.setState((prevState) => {\n        return {\n          surfaces: []\n        }\n\n      },\n    this.retrieveSurfaceInfo(nextProps.manifestationid))\n    }\n  }\n  render() {\n    const displayAllImages = () => {\n      const sortedSurfaces = this.state.surfaces.sort((a, b) => {\n        if (a.order > b.order) return 1;\n        if (b.order > a.order) return -1;\n        return 0;\n      })\n      const surfacesDisplay = sortedSurfaces.map((surface) => {\n        return displayImages(surface)\n      })\n      return surfacesDisplay\n    }\n    const displayImages = (surface) => {\n\n      // handle line display\n      if (surface.annotations && this.props.annotationsDisplay === \"lines\"){\n        const imageTextWrappers = surface.annotations.map((h, i) => {\n\n          if (i + 1 >= surface.firstLine && i < surface.lastLine){\n            const text = h.resource.chars;\n            const canvas = h.on.split(\"#xywh=\")[0];\n            const canvasShort = canvas.split(\"/\")[canvas.split(\"/\").length - 1];\n            const coords = h.on.split(\"#xywh=\")[1];\n            const imageUrl = h.imageUrl\n            const label = h.label\n            return (\n              <ImageTextWrapper key={i}\n                imageUrl={imageUrl}\n                canvas={canvas}\n                coords={coords}\n                canvasShort={canvasShort}\n                text={text}\n                label={label}\n                targetLabel={this.props.targetLabel}\n                surfaceButton={false}\n                displayWidth=\"1000\"\n                />\n              )\n            }\n            else{\n              return null\n            }\n\n        })\n        return imageTextWrappers\n      }\n      // handle paragraph display\n      else if (surface.annotations && this.props.annotationsDisplay === \"paragraph\"){\n        const h = surface.annotations[surface.firstLine - 1]\n        const fl = surface.annotations[surface.firstLine - 1]\n        const flcanvas = fl.on.split(\"#xywh=\")[0];\n        const flcanvasShort = flcanvas.split(\"/\")[flcanvas.split(\"/\").length - 1];\n        const flcoords = fl.on.split(\"#xywh=\")[1];\n        const y = flcoords.split(\",\")[1]\n        const ll = surface.annotations[surface.lastLine - 1]\n        //const llcanvas = ll ? ll.on.split(\"#xywh=\")[0] : \"\"\n        //const llcanvasShort = llcanvas.split(\"/\")[llcanvas.split(\"/\").length - 1];\n        const llcoords = ll ? ll.on.split(\"#xywh=\")[1] : \"\"\n        const lly = llcoords.split(\",\")[1]\n        const llh = llcoords.split(\",\")[3]\n        const llbottom = (parseInt(lly) + parseInt(llh)) - parseInt(y)\n        const coords = (parseInt(flcoords.split(\",\")[0] - 10)) + \",\" + (parseInt(y) - 50) + \",\" + (parseInt(flcoords.split(\",\")[2]) + 10) + \",\" + (parseInt(llbottom) + 50)\n        const text = \"\"\n        const imageUrl = h.imageUrl\n\n        return (\n          <ImageTextWrapper\n            imageUrl={imageUrl}\n            canvas={flcanvas}\n            coords={coords}\n            canvasShort={flcanvasShort}\n            text={text}\n            label={\"\"}\n            targetLabel={\"\"}\n            surfaceButton={false}\n            displayWidth=\"1000\"\n            />\n          )\n        }\n      else{\n        return <img alt=\"manuscript\" src={surface.imageurl + \"/full/\" + this.state.width + \",/0/default.jpg\"}/>\n      }\n    }\n    return (\n      <Container className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      {displayAllImages()}\n      </Container>\n\n    );\n  }\n\n}\n\nexport default Surface3;\n","import React from 'react';\nimport Surface3 from './Surface3';\n\nimport { FaList, FaFile, FaParagraph} from 'react-icons/fa';\n\n//TODO: surface 3 needs to run in a wrapper which allows the user to choose between manifestations.\n//TODO: rdf dbase needs to include first line numbers for paragraphs that start in the middle of al line.\n\nclass Surface3Wrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleChangeManifestation = this.handleChangeManifestation.bind(this)\n    this.handleToggleTextLinesView = this.handleToggleTextLinesView.bind(this)\n    this.state = {\n      manifestations: [],\n      focusedManifestation: \"\",\n      focusedManifestationSlug: null,\n      annotationsDisplay: \"lines\"\n    }\n  }\n  handleToggleTextLinesView(view){\n    //this.retrieveSurfaceInfo(this.state.previous)\n    this.setState((prevState) => {\n      return {annotationsDisplay: view}\n    })\n  }\n  handleChangeManifestation(focusedManifestation){\n    //TODO not best way to get manifestation slug; it should probably be retrieved from info query\n    const slug = focusedManifestation.split(\"/resource/\")[1].split(\"/\")[1]\n    this.setState({focusedManifestation: focusedManifestation, focusedManifestationSlug: slug})\n  }\n  componentDidMount(){\n    if (this.props.info){\n      this.setState((prevState) => {\n        return {\n          manifestations: this.props.info.manifestations,\n        }\n      })\n    }\n  }\n  componentWillReceiveProps(nextProps){\n    if (nextProps.info !== this.props.info){\n      this.setState((prevState) => {\n        return {\n          manifestations: nextProps.info.manifestations,\n        }\n      })\n    }\n  }\n  render() {\n    const displayManifestationsList = () => {\n      const list = this.state.manifestations.map((m) => {\n        return <p key={\"title-\" + m.manifestation}><span onClick={() => {this.handleChangeManifestation(m.manifestation)}}>{m.manifestationTitle}</span></p>\n      })\n      return list\n    }\n    const displayManifestation = () => {\n      const manifestation = this.state.manifestations.map((m) => {\n        if (m.manifestation.includes(this.state.focusedManifestationSlug)){\n          return <Surface3 key={\"surface-\" + m.manifestation} manifestationid={m.manifestation} annotationsDisplay={this.state.annotationsDisplay}/>\n        }\n        else{\n          return null\n        }\n      })\n      return manifestation\n\n    }\n\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n        <div className=\"surfaceWrapper\">\n          <div className=\"manifestationsList\">\n            {displayManifestationsList()}\n          </div>\n          <div className=\"imagesDisplay\">\n            {displayManifestation()}\n          </div>\n          {this.state.focusedManifestationSlug &&\n            <div>\n            <p><span title=\"Text Line View\" onClick={() => {this.handleToggleTextLinesView(\"lines\")}}><FaList/></span></p>\n            <p><span title=\"Paragraph View\" onClick={() => {this.handleToggleTextLinesView(\"paragraph\")}}><FaParagraph/></span></p>\n            <p><span title=\"Full Surface View\" onClick={() => {this.handleToggleTextLinesView(\"surface\")}}><FaFile/></span></p>\n            </div>\n          }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Surface3Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios'\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\n//import xml from 'react-syntax-highlighter/dist/esm/languages/hljs/xml';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n/**\n* XML view show component\n**/\nclass XmlView extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.mount = false\n    this.retrieveXML = this.retrieveXML.bind(this)\n    this.state = {\n      xmlstring: \"\"\n    }\n  }\n  retrieveXML(tresourceid){\n    const xmlurl = \"http://exist.scta.info/exist/apps/scta-app/document/\" + tresourceid.split(\"/resource/\")[1]\n    Axios.get(xmlurl).then((d) => {\n      if (this.mount){\n        this.setState({xmlstring: d.data})\n      }\n    })\n\n  }\n  componentDidMount(){\n    this.mount = true\n    this.retrieveXML(this.props.tresourceid)\n\n  }\n  componentWillReceiveProps(nextProps){\n    if (nextProps.tresourceid !== this.props.tresourceid){\n      this.retrieveXML(nextProps.tresourceid)\n    }\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n\n  render(){\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      <SyntaxHighlighter language=\"xml\" style={docco} showLineNumbers>\n        {this.state.xmlstring}\n      </SyntaxHighlighter>\n      </div>\n    )\n  }\n}\n\nXmlView.propTypes = {\n  /**\n  * transcription resource id of transcription for desired xml view\n  *\n  * TODO: Component is currently splitting the id and constructing the xml based\n  * on a prior knowledge of where xml is; this really should be retrieved from the resource id\n  * but the xml look up should happen outside of the XmlView Component in order to keep this component simple\n  * and making only request directly to the xml file\n  */\n  tresourceid: PropTypes.string.isRequired,\n  /**\n  * hidden designates whether the component should be hidden after mounting\n  */\n  hidden: PropTypes.bool,\n}\nexport default XmlView;\n","import React from 'react';\nimport { FaClipboard} from 'react-icons/fa';\nimport {Link} from 'react-router-dom';\n\nclass Info extends React.Component {\n  constructor(props){\n    super(props)\n    this.copyToClipboard = this.copyToClipboard.bind(this)\n\n  }\n  copyToClipboard(string){\n    var dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.value = string;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n  }\n  componentDidMount(){\n\n\n  }\n  componentWillReceiveProps(newProps){\n\n  }\n\n  render(){\n    const displayRelatedExpressions = () => {\n      //prevents against rendering if info is not present\n      if (this.props.info){\n        //prevents against rendering if relatedExpressions is not present\n        if (this.props.info.relatedExpressions){\n          const relatedExpressions = this.props.info.relatedExpressions.map((r) => {\n            return <p key={r.resourceid}>{r.relationLabel} <Link to={\"/text?resourceid=\" + r.resourceid}>{r.resourceid}</Link></p>\n          })\n          return relatedExpressions\n        }\n      }\n    }\n    const displayManifestations = () => {\n      if (this.props.info){\n        const manifestations = this.props.info.manifestations.map((i) => {\n          return <p key={i.manifestation}>{i.manifestationTitle} : <Link to={\"/text?resourceid=\" + i.manifestation}>{i.manifestation}</Link></p>\n        })\n        return manifestations\n      }\n    }\n    const displayInfo = () => {\n      if (this.props.info){\n        const resourceid = this.props.info.resourceid.includes('http') ? this.props.info.resourceid : \"http://scta.info/resource/\" + this.props.info.resourceid\n        return(\n          <div>\n          <p key=\"id\">Resourceid: {resourceid}  <span title=\"Copy resource id\" onClick={(e) => {e.preventDefault(); this.copyToClipboard(resourceid)}}><FaClipboard /></span></p>\n          <p key=\"inbox\">LDN Inbox: {this.props.info.inbox}</p>\n          </div>\n        )\n      }\n    }\n  return (\n\n    <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      <h1>Info</h1>\n      {displayInfo()}\n      <div>\n      <p>Manifestations</p>\n      {displayManifestations()}\n      </div>\n      <div>\n      <p>Related Expression</p>\n      {displayRelatedExpressions()}\n      </div>\n\n\n\n    </div>\n    );\n  }\n}\n\nexport default Info;\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\n\nimport {FaSearch, FaGripVertical, FaCode, FaInfo, FaRegImage, FaComments, FaRegWindowRestore, FaRegWindowMaximize, FaRegWindowMinimize, FaRegWindowClose, FaPencilAlt, FaClone, FaAlignLeft} from 'react-icons/fa';\n// reimport these if you want to use the chnage window location functions: FaAngleDoubleDown, FaAngleDoubleLeft,\n\nfunction WindowNavBar(props) {\n\n  return (\n  <Nav variant=\"tabs\">\n  {\n    //<Navbar.Brand href=\"/\">Focus: {props.focus}</Navbar.Brand>\n  }\n  {props.focusSet && <Nav.Item>\n    <Nav.Link title=\"Basic Resource Information\" onClick={() => {props.handleTabChange(\"info\", props.windowId)}}><FaInfo/></Nav.Link>\n  </Nav.Item>}\n  {props.focusSet && <Nav.Item>\n    <Nav.Link title=\"Images\" onClick={() => {props.handleTabChange(\"surface3\", props.windowId)}}><FaRegImage/></Nav.Link>\n  </Nav.Item>}\n  <Nav.Item>\n    <Nav.Link title=\"Text XML Source\" onClick={() => {props.handleTabChange(\"xml\", props.windowId)}}><FaCode/></Nav.Link>\n  </Nav.Item>\n  {props.focusSet && <Nav.Item>\n    <Nav.Link title=\"Text Comparisons\" onClick={() => {props.handleTabChange(\"textCompare\", props.windowId)}}><FaGripVertical/></Nav.Link>\n  </Nav.Item>}\n  {props.focusSet &&<Nav.Item>\n    <Nav.Link title=\"Comments\" onClick={() => {props.handleTabChange(\"comments\", props.windowId)}}><FaComments/></Nav.Link>\n  </Nav.Item>}\n  {props.focusSet &&<Nav.Item>\n    <Nav.Link title=\"Text Citation\" onClick={() => {props.handleTabChange(\"citation\", props.windowId)}}><FaPencilAlt/></Nav.Link>\n  </Nav.Item>}\n  <Nav.Item>\n    <Nav.Link title=\"Text Outline\" onClick={() => {props.handleTabChange(\"textOutlineWrapper\", props.windowId)}}><FaAlignLeft/></Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link title=\"Text Search\" onClick={() => {props.handleTabChange(\"search\", props.windowId)}}><FaSearch/></Nav.Link>\n  </Nav.Item>\n\n  {props.openWidthHeight !== \"minimum\" &&\n  <Nav.Item>\n    <Nav.Link title=\"Minimize Window\" onClick={() => {props.handleMinimize(props.windowId)}}><FaRegWindowMinimize/></Nav.Link>\n  </Nav.Item>}\n  {props.openWidthHeight !== \"middle\" &&\n  <Nav.Item>\n    <Nav.Link title=\"Half Size Window\" onClick={() => {props.handleMiddlize(props.windowId)}}><FaRegWindowRestore/></Nav.Link>\n  </Nav.Item>\n  }\n  {props.openWidthHeight !== \"maximum\" &&\n  <Nav.Item>\n    <Nav.Link title=\"Maximize Window\" onClick={() => {props.handleMaximize(props.windowId)}}><FaRegWindowMaximize/></Nav.Link>\n  </Nav.Item>\n  }\n  <Nav.Item>\n    <Nav.Link title=\"Close Window\" onClick={() => {props.handleClose(props.windowId)}}><FaRegWindowClose/></Nav.Link>\n  </Nav.Item>\n  {/* commented to prevent window moving; this insures window 1 is always side window and window 2 is bottom window\n    uncomment if this behavior is desired\n    <Nav.Item>\n    <Nav.Link title=\"Move Window\" onClick={() => {props.handleSwitchWindow(props.windowId, props.windowType)}}>{props.windowType === \"sideWindow\" ? <FaAngleDoubleDown/> : <FaAngleDoubleLeft/>}</Nav.Link>\n  </Nav.Item>\n  */\n  }\n  <Nav.Item>\n    {!props.altWindowState && <Nav.Link title=\"Clone Window\" onClick={() => {props.handleDuplicateWindow(props.windowId, props.windowType)}}>{<FaClone/>}</Nav.Link>}\n  </Nav.Item>\n\n\n</Nav>\n\n  );\n}\n\nexport default WindowNavBar;\n","import React from 'react';\n\nimport { FaAngleLeft, FaAngleRight} from 'react-icons/fa';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction NextPrevBar(props) {\n  const displayNextPrevBar = () => {\n    if (props.info){\n      return (\n        <Nav variant=\"tabs\">\n        <Nav.Link onClick={() => {props.handleBlockFocusChange(props.info.resourceid)}}>{props.info.title}</Nav.Link>\n        <Nav.Item>\n          {(props.info.previous && props.info.previous !== \"http://scta.info/resource/\")  && <Nav.Link onClick={() => {props.handleBlockFocusChange(props.info.previous)}}><FaAngleLeft/></Nav.Link>}\n        </Nav.Item>\n        <Nav.Item>\n          {(props.info.next && props.info.next !== \"http://scta.info/resource/\") && <Nav.Link onClick={() => {props.handleBlockFocusChange(props.info.next)}}><FaAngleRight/></Nav.Link>}\n        </Nav.Item>\n\n        </Nav>\n      )\n    }\n    else{\n      return null\n    }\n  }\n  return (\n    displayNextPrevBar()\n  );\n}\n\nexport default NextPrevBar;\n","import React from 'react';\nimport Diff from 'diff-match-patch'\nimport Axios from 'axios'\nimport {Link} from 'react-router-dom';\n\nimport { FaEyeSlash, FaEye, FaStar } from 'react-icons/fa';\n\nclass TextCompareItem extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleShow = this.handleToggleShow.bind(this)\n    this.mounted = \"\"\n    this.state = {\n      compareText: \"\",\n      rawText: \"\",\n      show: true\n    }\n  }\n  handleToggleShow(){\n    this.setState((prevState) => {\n      return{\n        show: !prevState.show\n      }\n    })\n  }\n  createCompare(base, transcription){\n\n    Axios.get(\"http://exist.scta.info/exist/apps/scta-app/csv-pct.xq?resourceid=\" + transcription)\n          .then((text) => {\n\n            const dmp = new Diff.diff_match_patch();\n\n            const diff = dmp.diff_main(base, text.data);\n            // Result: [(-1, \"Hell\"), (1, \"G\"), (0, \"o\"), (1, \"odbye\"), (0, \" World.\")]\n            dmp.diff_cleanupSemantic(diff);\n            const ds = dmp.diff_prettyHtml(diff);\n            if (this.mounted === true && base){\n              this.setState({compareText: ds, rawText: text.data})\n            }\n\n          })\n        }\n\n  componentDidMount(){\n    this.mounted = true;\n    this.setState({rawText: \"\", compareText: \"\"})\n    this.createCompare(this.props.base, this.props.compareTranscription)\n  }\n  componentWillReceiveProps(newProps){\n    // conditional try to restrict new async calls to only when props.info changes\n    if (newProps.base !== this.props.base || newProps.compareTranscription !== this.props.compareTranscription){\n      this.setState({rawText: \"\", compareText: \"\"})\n      this.createCompare(newProps.base, newProps.compareTranscription)\n    }\n  }\n  componentWillUnmount(){\n      this.mounted = false;\n    }\n\n\n  render(){\n    const displayComparison = () => {\n      if (this.props.base && this.state.compareText){\n        return (\n          <div>\n            <span><Link to={\"/text?resourceid=\" + this.props.compareTranscription}>{this.props.compareTranscription}</Link></span>\n            <span onClick={() => this.handleToggleShow()}>{this.state.show ? <FaEyeSlash/> : <FaEye/>}</span>\n            <span onClick={() => this.props.handleChangeBase(this.state.rawText)}><FaStar/></span>\n            <div className={this.state.show ? \"unhidden\" : \"hidden\"}>\n              <div ref=\"text\" dangerouslySetInnerHTML={{ __html: this.state.compareText}}></div>\n            </div>\n          </div>\n        )\n      }\n      else{\n        return <p>Loading</p>\n      }\n    }\n\n    return (\n      displayComparison()\n    );\n  }\n}\n\nexport default TextCompareItem;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { FaEyeSlash, FaEye } from 'react-icons/fa';\nimport {runQuery} from './utils'\nimport {basicInfoQuery} from './Queries'\n\nimport TextCompareItem from './TextCompareItem'\n\n\n\nclass TextCompare extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleShowAll = this.handleToggleShowAll.bind(this)\n    this.mounted = \"\"\n    this.state = {\n      info: \"\",\n      show: false,\n      baseText: \"\"\n    }\n\n  }\n\n  handleToggleShowAll(){\n    this.setState((prevState) => {\n      return{\n        show: !prevState.show\n      }\n    })\n  }\n\n  // TODO dupblicate of function in Text Component\n  // needs refactoring\n  arrangeTextInfo(info, resourceid){\n      info.then((d) => {\n        const bindings = d.data.results.bindings[0]\n        const manifestations = d.data.results.bindings.map((b) => {\n          return {\n            manifestation: b.manifestation.value,\n            manifestationTitle: b.manifestationTitle.value,\n            transcription: b.manifestationCTranscription.value\n          }\n        })\n        if (this.mounted === true && bindings){\n          this.setState({\n            info: {\n              resourceid: resourceid,\n              title: bindings.title.value,\n              structureType: bindings.structureType.value,\n              inbox: bindings.inbox.value,\n              next: bindings.next ? bindings.next.value : \"\",\n              previous: bindings.previous ? bindings.previous.value : \"\",\n              cdoc: bindings.cdoc.value,\n              cxml: bindings.cxml.value,\n              topLevel: bindings.topLevelExpression.value,\n              cmanifestation: bindings.cmanifestation.value,\n              ctranscription: bindings.ctranscription.value,\n              manifestations: manifestations\n            }\n          });\n        }\n      });\n    }\n  getTextInfo(id){\n    const info = runQuery(basicInfoQuery(id))\n    this.arrangeTextInfo(info, id)\n  }\n\n  componentDidMount(){\n    this.mounted = true;\n    this.setState({show: this.props.show, baseText: this.props.baseText})\n\n    if (this.props.isMainText){\n\n      this.setState({info: this.props.info})\n    }\n    else{\n      this.getTextInfo(this.props.expressionid)\n    }\n  }\n\n\n  componentWillReceiveProps(nextProps){\n    // conditional try to restrict new async calls to only when props.info changes\n    if (this.props.info.resourceid !== nextProps.info.resourceid){\n      this.setState({baseText: nextProps.baseText})\n\n      if (nextProps.isMainText){\n        this.setState({info: nextProps.info})\n      }\n      else{\n        this.getTextInfo(nextProps.expressionid)\n\n      }\n    }\n  }\n    componentWillUnmount(){\n      this.mounted = false;\n  }\n\n  render(){\n    const displayComparisons = () => {\n      if (this.state.info.manifestations){\n        const texts = this.state.info.manifestations.map((m) => {\n          return (\n            <TextCompareItem\n            key={m.transcription}\n            base={this.props.baseText}\n            compareTranscription={m.transcription}\n            handleChangeBase={this.props.handleChangeBase}\n            show={this.state.show}\n            />\n          )\n        })\n        return texts\n      }\n    }\n\n  return (\n    <div>\n      {\n        // the link to reroute is not quite working, because the base Text is not resetting, focusBlockChange might be better; but item structure will also need to be changed.\n      }\n      <p><span>{this.props.relationLabel}</span> <Link to={\"/text?resourceid=\" + this.state.info.resourceid}>{this.state.info.resourceid}</Link>\n      <span onClick={() => this.handleToggleShowAll()}>{this.state.show ? <FaEyeSlash/> : <FaEye/>}</span></p>\n      <div className={this.state.show ? \"unhidden\" : \"hidden\"}>\n      {displayComparisons()}\n      </div>\n    </div>\n\n  );\n  }\n}\n\nexport default TextCompare;\n","import React from 'react';\nimport Axios from 'axios'\n\nimport TextCompare from './TextCompare'\n\n\nclass TextCompareWrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleCompare = this.handleToggleCompare.bind(this)\n    this.handleChangeBase = this.handleChangeBase.bind(this)\n    this.getText = this.getText.bind(this)\n    this.mounted = \"\"\n    this.state = {\n      expressions: {},\n      baseText: \"\"\n    }\n\n  }\n  handleChangeBase(rawText){\n    this.setState({baseText: rawText})\n  }\n  handleToggleCompare(expressionid){\n    this.setState((prevState) => {\n      const newExpressions = {...prevState.expressions}\n      newExpressions[expressionid].show = !newExpressions[expressionid].show\n      return {\n        expressions: newExpressions\n      }\n    })\n  }\n  getText(ctranscription){\n    const _this = this;\n    Axios.get(\"http://exist.scta.info/exist/apps/scta-app/csv-pct.xq?resourceid=\" + ctranscription)\n      .then((text) => {\n        _this.setState({baseText: text.data})\n      })\n    }\n\n  componentDidMount(){\n    // prevents check when prop.info is not set\n    if (this.props.info){\n      // prevents check when prop.info.relatedExpressions is not set\n      if (this.props.info.relatedExpressions){\n        this.getText(this.props.info.ctranscription)\n        const expressions = {}\n        expressions[this.props.info.resourceid] = {id: this.props.info.resourceid, show: true}\n\n        this.props.info.relatedExpressions.forEach((r) => {\n          expressions[r.resourceid] = {id: r.resourceid, relationLabel: r.relationLabel, show: false}\n        })\n        this.setState({expressions: expressions})\n      }\n    }\n  }\n  componentWillReceiveProps(nextProps){\n    // only fire reload if \"info resource\" has changed\"\n    if (this.props.info.resourceid !== nextProps.info.resourceid){\n\n    // this conditional is needed, because props are waiting on multiple async calls.\n    // when an async call finishes it will up; and the related Expression query last,\n    // it will use the old ctranscription prop overriding the the update from the prop update from the other async call\n    if (this.props.info.relatedExpressions){\n      // this conditional may no longer be necessary based on first conditional check\n      if (this.props.info.ctranscription !== nextProps.info.ctranscription){\n        this.getText(nextProps.info.ctranscription)\n      }\n      const expressions = {}\n      expressions[nextProps.info.resourceid] = {id: nextProps.info.resourceid, show: true}\n      nextProps.info.relatedExpressions.forEach((r) => {\n        expressions[r.resourceid] = {id: r.resourceid, relationLabel: r.relationLabel, show: false}\n      })\n      this.setState({expressions: expressions})\n    }\n  }\n  }\n  render(){\n    const displayExpressions = () => {\n      const exObject = this.state.expressions\n      const expressions = Object.keys(exObject).map((key) => {\n        const isMainText = this.props.info.resourceid === exObject[key].id ? true : false\n        return (\n          <div key={this.state.expressions[key].id}>\n            {<TextCompare\n              info={this.props.info}\n              expressionid={exObject[key].id}\n              relationLabel={exObject[key].relationLabel}\n              isMainText={isMainText}\n              handleChangeBase={this.handleChangeBase}\n              baseText={this.state.baseText}\n              show={exObject[key].show}\n              />}\n          </div>\n        )\n      })\n      return expressions\n    }\n\n  return (\n    <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n    {displayExpressions()}\n    </div>\n\n  );\n  }\n}\n\nexport default TextCompareWrapper;\n","import React from 'react';\n\nfunction CommentItem(props) {\n  return (\n    <div className=\"comment\">\n      <p>{props.n && props.n.body.value}</p>\n      </div>\n  );\n}\n\nexport default CommentItem;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nclass CommentCreate extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleCommentUpdate = this.handleCommentUpdate.bind(this)\n    this.handleSubmitComment = this.handleSubmitComment.bind(this)\n    this.state = {\n      comment: \"\"\n    }\n  }\n  handleCommentUpdate(e){\n    e.preventDefault()\n    this.setState({comment: e.target.value})\n\n  }\n  handleSubmitComment(e){\n    e.preventDefault()\n    this.props.handleSumbitComment(this.state.comment)\n  }\n  render(){\n    return (\n      <div className=\"comment\">\n        <Form onSubmit={this.handleSubmitComment}>\n         <FormControl type=\"text\" id=\"comment\" placeholder=\"comment\" className=\"mr-sm-2\" onChange={this.handleCommentUpdate} />\n         <Button type=\"submit\" variant=\"outline-success\">Search</Button>\n       </Form>\n      </div>\n    );\n  }\n}\n\nexport default CommentCreate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios';\nimport uuidv4 from 'uuid/v4';\n\nimport CommentItem from \"./CommentItem\"\nimport CommentCreate from \"./CommentCreate\"\n\nclass Comments extends React.Component {\n  constructor(props){\n  super(props)\n  this.handleSumbitComment = this.handleSumbitComment.bind(this)\n  this.state = {\n    notifications: [],\n    inbox: \"\",\n    resourceid: \"\"\n  }\n}\nhandleSumbitComment(comment){\n  const _this = this;\n\n  const randomid = uuidv4();\n  const annotat = {\n    \"@context\": \"http://www.w3.org/ns/anno.jsonld\",\n    \"id\": \"http://inbox.scta.info/notifications/\" + randomid,\n    \"type\": \"Annotation\",\n    \"motivation\": \"commenting\",\n    \"body\": {\n      \"type\": \"TextualBody\",\n      \"value\": comment\n    },\n    \"target\": this.state.resourceid\n  }\n  Axios({\n    method: 'post',\n    url: this.state.inbox,\n    data: annotat,\n    config: { headers: {'Content-Type': 'application/json+ld' }}\n    })\n    .then(function (response) {\n      _this.setState((prevState) => {\n        return {notifications: [annotat, ...prevState.notifications, ]}\n      });\n    })\n    .catch(function (response) {\n        //handle error\n        console.log(response);\n    });\n\n\n  }\n  retrieveComments(inbox){\n    // using callback here to make sure state is set before making second a sync call.\n    // TODO: consider using this in other components to prevent out of sync behavior\n    // especially is TextCompareComponents\n    this.setState({notifications: []}, function() {\n      Axios.get(inbox).then((d) => {\n        d.data[\"ldp:contains\"].forEach((n) => {\n          //TODO annoying that each comment has to be requestd.\n          // if inbox main list included full comment, only one request would be needed\n          Axios.get(n[\"@id\"]).then((d2) => {\n            this.setState((prevState) => {\n              return {notifications: [...prevState.notifications, d2.data]}\n            });\n          });\n        })\n      }).catch((e) => {\n        console.log(e)\n      })\n    })\n  }\n  componentDidMount(){\n    // conditional prevents against needless attempt to retreive comments with info is not present\n    if (this.props.resourceid){\n      this.setState({inbox: this.props.inbox, resourceid: this.props.resourceid})\n      this.retrieveComments(this.props.inbox)\n    }\n  }\n  componentWillReceiveProps(newProps){\n    // conditional prevents against needlessly rerequesting information when \"info\" is the same\n    if (newProps.resourceid !== this.props.resourceid){\n      this.setState({inbox: newProps.inbox, resourceid: newProps.resourceid})\n      this.retrieveComments(newProps.inbox)\n    }\n  }\n  render(){\n    const displayComments = () => {\n      const comments = this.state.notifications.map((n, i) => {\n        return (\n          <CommentItem key={i} n={n}/>\n        )\n      })\n      return comments\n    }\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n        <h1>Comments</h1>\n        <CommentCreate handleSumbitComment={this.handleSumbitComment}/>\n        {displayComments()}\n      </div>\n    );\n\n  }\n}\n\nComments.propTypes = {\n  /**\n  * resource id; comments will be assigned to this resourceid\n  */\n  resourceid: PropTypes.string.isRequired,\n  /**\n  * inbox;\n  * IDEA: inbox url is currently required; but it is retrievable\n  * just from the resource. Thus it would be good to be able to supply it if already known\n  * but if it is not supplied the component should be able to look it up.\n  */\n  inbox: PropTypes.string.isRequired,\n  /**\n  * hidden designates whether the component should be hidden after mounting\n  */\n  hidden: PropTypes.bool\n}\n\nexport default Comments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from 'react-bootstrap/Container';\nimport { FaClipboard} from 'react-icons/fa';\nimport {runQuery, copyToClipboard} from './utils'\nimport {getManifestationCitationInfo} from './Queries'\n\n/**\n* citation component\n*\n* TODO: it would be better to separate the citation display, manifestation picker, citation explation\n* into three differen compoments wrapped in a citation Wrapper.\n* This way the citation display could be truly independent\n*/\nclass Citation extends React.Component{\n  constructor(props){\n    super(props)\n    this.toggleAlternativeManifestations = this.toggleAlternativeManifestations.bind(this)\n    this.toggleCitationExplanation = this.toggleCitationExplanation.bind(this)\n    this.state = {\n      eurl: \"\",\n      etitle: \"\",\n      murl: \"\",\n      mtitle: \"\",\n      turl: \"\",\n      showAlternativeManifestations: false,\n      showCitationExplanation: false\n    }\n  }\n  toggleAlternativeManifestations(){\n    this.setState((prevState) => {\n      return {showAlternativeManifestations: !prevState.showAlternativeManifestations}\n    })\n  }\n  toggleCitationExplanation(){\n    this.setState((prevState) => {\n      return {showCitationExplanation: !prevState.showCitationExplanation}\n    })\n  }\n\n  retrieveCitation(tresourceid){\n    if (tresourceid){\n      const manifestationCitationInfo = runQuery(getManifestationCitationInfo(tresourceid))\n      manifestationCitationInfo.then((data) => {\n        const allBindings = data.data.results.bindings\n        if (allBindings.length > 0){\n          const bindings = allBindings[0]\n          const expressionid = bindings.expression ? bindings.expression.value : \"\"\n          const manifestationid = bindings.manifestation ? bindings.manifestation.value : \"\"\n          const eLongTitle = bindings.eLongTitle ? bindings.eLongTitle.value : \"\"\n          const authorTitle = bindings.authorTitle ? bindings.authorTitle.value : \"\"\n          const author = bindings.authorTitle ? bindings.author.value : \"\"\n          const datasource = bindings.datasource ? bindings.datasource.value : \"\"\n          const title = bindings.codexTitle ? bindings.codexTitle.value : \"\"\n          const start = bindings.surfaceTitle ? bindings.surfaceTitle.value : \"\"\n          const end = allBindings[allBindings.length - 1].surfaceTitle ? allBindings[allBindings.length - 1].surfaceTitle.value : \"\"\n\n          this.setState(\n            {\n              author: author,\n              authorTitle: authorTitle,\n              eurl: expressionid,\n              etitle: eLongTitle,\n              murl: manifestationid,\n              mtitle: start !== end ? title + \", \" + start + \"-\" + end : title + \", \" + start,\n              turl: tresourceid,\n              datasource: datasource,\n            }\n          )\n        }\n      })\n    }\n  }\n  componentDidMount(){\n    this.retrieveCitation(this.props.tresourceid)\n\n  }\n  componentWillReceiveProps(newProps){\n    if (newProps.tresourceid !== this.props.tresourceid){\n      this.retrieveCitation(newProps.tresourceid)\n    }\n  }\n  render(){\n    const displayManifestations = () => {\n      if (this.props.manifestations){\n        const manifestations = this.props.manifestations.map((i) => {\n          return <p key={i.manifestation}>{i.manifestationTitle} : <span onClick={() => {this.props.handleFocusChange(i.manifestation)}}>{i.manifestation}</span></p>\n        })\n        return manifestations\n      }\n    }\n    const fullCitationString = this.state.authorTitle + \", \" + this.state.etitle + \"(\" + this.state.mtitle + \") Data source: \" + this.state.datasource + \".\"\n    return (\n      <Container className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      <h4>Citation</h4>\n      <p>\n        <span className=\"etitle\">{this.state.authorTitle}, {this.state.etitle} (<a href={this.state.eurl} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.eurl}</a>)</span>\n        <br/>\n        <span className=\"mtitle\">({this.state.mtitle} (<a href={this.state.murl} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.murl}</a>))</span>\n        <br/>\n        <span className=\"ttitle\">(Transcription Resource: <a href={this.state.turl} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.turl}</a>;\n        (Data source:<a href={this.state.datasource} target=\"_blank\" rel=\"noopener noreferrer\"> {this.state.datasource}</a>)</span>\n        <span title=\"Copy Citation to Clipboard\" onClick={(e) => {e.preventDefault(); copyToClipboard(fullCitationString)}}><FaClipboard /></span>\n      </p>\n      <div className=\"citation-manifestation-options\">\n        <h4 onClick={this.toggleAlternativeManifestations}>{this.state.showAlternativeManifestations ? \"Hide \" : \"View \"} the same text in an alternative manifestation</h4>\n        {this.state.showAlternativeManifestations && displayManifestations()}\n      </div>\n      {/*\n       Peter Plaoul, Commentarius in libros Sententiarum, de Fide, Lectio 1, de Fide, Quaestio: utrum in causa iudiciali fidei contra traditionem pure humanitus adinventam iudex idoneus ferret pro fide sententiam , Paragraph l1-cpspfs, [n. 1], SCTA Expression Url http://scta.info/resource/l1-cpspfs; ed. EditorName, SCTA Manifestion Url http://scta.info/resource/l1-cpspfs, Transcription Data Source QmNynYEQkRrt6MTfCxS8w2Pm6eN4tbLXuRCpE7HbzWdxqg; Accessed at http://scta.lombardpress.org/text/l1-cpspfs on June 29, 2019, Archived at http://scta.lombardpress.org/text/archive?datasource=QmNynYEQkRrt6MTfCxS8w2Pm6eN4tbLXuRCpE7HbzWdxqg</p>\n\n       <p>Short Citation</p>\n\n       <p>Peter Plaoul, Commentarius in libros Sententiarum, de Fide, Lectio 1, de Fide, Quaestio: utrum in causa iudiciali fidei contra traditionem pure humanitus adinventam iudex idoneus ferret pro fide sententiam , Paragraph l1-cpspfs, [n. 1], QmNynYEQkRrt6MTfCxS8w2Pm6eN4tbLXuRCpE7HbzWdxqg, Accessed on June 29, 2019</p>\n       */}\n<div>\n  <h4 onClick={this.toggleCitationExplanation}>{this.state.showCitationExplanation ? \"Hide \" : \"View \"} explanation of citation practices</h4>\n  {this.state.showCitationExplanation &&\n    <div>\n      <p>The citation of a text that has survived through a historical succession of manifestations is a complicated endeavor.\n      Today, when transcriptions of these manifestations\n      can be published as data, separate from any presentation,\n      and thereby can be presented in a variety of ways,\n      a full citation inevitably becomes even more complex.\n      In order to identify the content hierarchy of the text,\n      the specifical material or born digital manifestation of that text,\n      and the data sources used to represent and display that manifestation,\n      specificity and precision are needed.</p>\n\n      <p>Full citations therefore identify three aspects of the text currently being viewed.</p>\n\n      <p className=\"etitle\">First (blue) it identifies the idea of the paragraph in question situated within the conceptual hierarchy of the text.</p>\n\n      <p className=\"mtitle\">Second (red) it identifies the manifestation of the text in a historical or born digital edition.</p>\n\n      <p className=\"ttitle\">Third (purple) it identifies the transcription and transcription data source used to power the current text presentation.</p>\n    </div>}\n  </div>\n  </Container>\n    );\n  }\n}\n\nCitation.propTypes = {\n  /**\n  * transcription resource id of focused passage,\n  * transcription id is required, because a specific text passage is being complicated\n  *\n  * TODO: perhaps it would be good to allow the expression or manifestation id to be given\n  * but the citation component would need to know what kind of resource this and would\n  * need to produce a different query in each case\n  */\n  tresourceid: PropTypes.string.isRequired,\n  /**\n  * manifestations provides list of other mnaifestations for focused expression\n\n  * TODO: it seems desireable not to require a manifestations property so that\n  * one can simply provide the transcription resource id, but if the propery is not\n  * the component could look it up itself. But information could also be supplied a prop\n  * in the case the parent component already has the information. In this case,\n  * a second look up by the component would be needless\n\n  * TODO: else if this were really going to be separate; the use of link in displayManifestations\n  * would need to be changed to prop that expects a function that would know what do with\n  * the manifestations change. At present the use of Link makes the component platoform dependent.\n  * But this only applies when a \"manifestations\" prop is supplied. Not supplying manifestations\n  * will disable this.\n\n  */\n  manifestations: PropTypes.array,\n  /**\n  * hidden designates whether the component should be hidden after mounting\n  */\n  hidden: PropTypes.bool,\n  /**\n  * function to handle response when new manifestaiton is picked.\n  *\n  * TODO: if manifetation list and selection were separated out into its component,\n  * this function would go with the manifestation list component.\n  */\n  handleFocusChange: PropTypes.func\n}\n\nexport default Citation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FaExternalLinkAlt, FaChevronDown, FaChevronUp} from 'react-icons/fa';\nimport {Link} from 'react-router-dom';\n\nimport {runQuery} from './utils'\nimport {getChildParts} from './Queries'\n\n/**\n* creates a text outline section\n*/\nclass TextOutline extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleChildren = this.handleToggleChildren.bind(this)\n    this.state = {\n      parts: [],\n      showChildren: false\n    }\n\n  }\n  /**\n    @public\n    * toggles state.showChildren indicating whether or not section children should be mounted\n  */\n  handleToggleChildren(e){\n    e.preventDefault();\n    this.setState((prevState) => {\n      return {showChildren: !prevState.showChildren}\n    })\n  }\n  retrieveParts(resourceid){\n    const partsInfo = runQuery(getChildParts(resourceid))\n    partsInfo.then((data) => {\n      // async seems to be working pretty well and efficiently.\n      // if a section has many parts, it will be fired several times.\n      // if it has a 100 parts, it will fire 100 times.\n      // But 100 doesn't seem to causing serious performance issues.\n      console.log(\"async test; fired\")\n      const newData = data.data.results.bindings.map((d) => {\n        return {\n          part: d.part.value,\n          title: d.title.value,\n          level: d.level.value,\n          structureType: d.structureType.value,\n          questionTitle: d.questionTitle ? d.questionTitle.value : \"\"\n        }\n      })\n      this.setState({parts: newData})\n    })\n  }\n  componentDidMount(){\n    //this.setState({showChildren: this.props.showChildren})\n    this.retrieveParts(this.props.resourceid)\n\n    if (this.props.membersOf){\n      if (this.props.membersOf.includes(this.props.resourceid)) {\n        this.setState({showChildren: true})\n\n      }\n    }\n\n  }\n  componentWillReceiveProps(newProps){\n    if (newProps.resourceid !== this.props.resourceid){\n      this.retrieveParts(this.props.resourceid)\n    }\n    if (newProps.resourceid !== this.props.resourceid || newProps.membersOf !== this.props.membersOf){\n      if (newProps.membersOf){\n        if (newProps.membersOf.includes(newProps.resourceid)) {\n          this.setState({showChildren: true})\n        }\n        // else{\n        //   this.setState({showChildren: false})\n        // }\n      }\n    }\n\n  }\n  render(){\n    const displayChildren = () => {\n      const parts = this.state.parts.map((p) => {\n        let bold = \"\"\n        if (this.props.membersOf){\n          if (this.props.membersOf.includes(p.part) || p.part === this.props.focusResourceid) {\n            bold = \"bold\"\n            //showChildren = true;\n          }\n        }\n        return <TextOutline\n        bold={bold}\n        key={p.part}\n        focusResourceid={this.props.focusResourceid}\n        showChildren={this.state.showChildren}\n        resourceid={p.part}\n        title={p.title}\n        level={p.level}\n        structureType={p.structureType}\n        membersOf={this.props.membersOf}\n        questionTitle={p.questionTitle}\n        mtFocus={this.props.mtFocus}\n        collectionLink={this.props.structureType === \"http://scta.info/resource/structureCollection\" ? this.props.collectionLink : true}/>\n      })\n      return parts\n    }\n    const indent = this.props.level * 5\n    return (\n      <div id=\"outline\" style={{\"paddingLeft\": indent + \"px\"}}>\n        <p className={this.props.bold}>\n        {this.props.title}\n        {this.props.questionTitle && <span>: {this.props.questionTitle}</span>}\n        {(this.state.parts.length > 0 && !this.state.showChildren) && <span className=\"outlineArrow\" onClick={this.handleToggleChildren}><FaChevronDown/></span>}\n        {(this.state.parts.length > 0 && this.state.showChildren) && <span className=\"outlineArrow\" onClick={this.handleToggleChildren}><FaChevronUp/></span>}\n        {this.props.collectionLink && <Link to={\"/text?resourceid=\" + this.props.resourceid + this.props.mtFocus} ><FaExternalLinkAlt/></Link>}\n        </p>\n        {this.state.showChildren && displayChildren()}\n      </div>\n    );\n  }\n}\n\nTextOutline.propTypes = {\n  /**\n  * resource id of focused passage, e.g. paragraph or div structure\n  */\n  focusedResourceid: PropTypes.string,\n  /**\n  * resource id of current section\n  */\n  resourceid: PropTypes.string,\n  /**\n  * title of current section\n  */\n  title: PropTypes.string,\n  /**\n  * hide entire outline\n  */\n  hidden: PropTypes.bool,\n  /**\n  * manifestation and transcription slug\n  * used to create links in outline to specific manifestation\n  * or transcription\n\n  */\n  mtFocus: PropTypes.string,\n  /**\n  * indicates if section heading should be bold with string \"bold\", indicating that focusedResourceId falls within this section\n\n  * TODO: \"bold\" value would be better as boolean, true false\n  */\n  bold: PropTypes.string,\n  /**\n  * indicates whether children should be shown\n  */\n  showChildren: PropTypes.bool,\n  /**\n  * indicates whether level of section with number as string\n\n  * TODO: would be better if level propType was number. \n  */\n  level: PropTypes.string,\n  /**\n  * indicates structureType of current section (e.g. collection, item, division, block)\n  */\n  structureType: PropTypes.string,\n  /**\n  * an array of ids, that focused section is a member of\n  */\n  membersOf: PropTypes.array,\n  /**\n  * question title associated with section\n  */\n  questionTitle: PropTypes.string,\n  /**\n  * indications whether a link at the collection level should be set or not\n  */\n  collectionLink: PropTypes.bool\n}\n\nexport default TextOutline;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextOutline from './TextOutline'\n\nimport {runQuery} from './utils'\nimport {getMembersOf} from './Queries'\n\n/**\n* creates a text outline starting from top level expression\n\n*/\nclass TextOutlineWrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      membersOf: [],\n    }\n  }\n  retrieveMembersOf(resourceid){\n    const membersOfInfo = runQuery(getMembersOf(resourceid))\n    membersOfInfo.then((data) => {\n      const newData = data.data.results.bindings.map((d) => {\n        return d.memberOf.value\n      })\n      this.setState({membersOf: newData})\n    })\n  }\n  componentDidMount(){\n    this.retrieveMembersOf(this.props.focusResourceid)\n  }\n  componentWillReceiveProps(newProps){\n    if (newProps.focusResourceid !== this.props.focusResourceid){\n      this.retrieveMembersOf(newProps.focusResourceid)\n    }\n  }\n  render(){\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      <TextOutline key={this.props.resourceid}\n      showChildren={true}\n      focusResourceid={this.props.focusResourceid}\n      resourceid={this.props.resourceid}\n      title={this.props.title}\n      level={\"1\"}\n      structureType={\"http://scta.info/resource/structureCollection\"}\n      membersOf={this.state.membersOf}\n      mtFocus={this.props.mtFocus}\n      collectionLink={this.props.collectionLink}/>\n      </div>\n    );\n  }\n}\n\nTextOutlineWrapper.propTypes = {\n  /**\n  * resource id of focused passage, e.g. paragraph or div structure\n  */\n  focusedResourceid: PropTypes.string,\n  /**\n  * resource id of current section\n  */\n  resourceid: PropTypes.string,\n  /**\n  * title of current section\n  */\n  title: PropTypes.string,\n  /**\n  * hide entire outline\n  */\n  hidden: PropTypes.bool,\n  /**\n  * manifestation and transcription slug\n  * used to create links in outline to specific manifestation\n  * or transcription\n  */\n  mtFoucs: PropTypes.string,\n  /**\n  * indications whether a link at the collection level should be set or not\n  */\n  collectionLink: PropTypes.bool\n}\nexport default TextOutlineWrapper;\n","import React from 'react';\nimport Surface2 from \"./Surface2\"\nimport Surface3Wrapper from \"./Surface3Wrapper\"\nimport XmlView from \"./XmlView\"\nimport Info from \"./Info\"\nimport WindowNavBar from \"./WindowNavBar\"\nimport NextPrevBar from \"./NextPrevBar\"\nimport TextCompareWrapper from \"./TextCompareWrapper\"\nimport SearchWrapper from \"./SearchWrapper\"\nimport Comments from \"./Comments\"\nimport Citation from \"./Citation\"\nimport TextOutlineWrapper from \"./TextOutlineWrapper\"\n\n\n\n\nclass Window extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      windowLoad: \"\"\n    }\n  }\n\n  componentDidMount(){\n    this.setState({windowLoad: this.props.windowLoad})\n\n\n  }\n  componentWillReceiveProps(newProps){\n    this.setState({windowLoad: newProps.windowLoad})\n\n\n  }\n\n\n  render(){\n    const displayChild = () => {\n      return(\n        <div>\n\n          {// components that are only avialable if blockDiv focus and this.props.info is set\n            this.props.info &&\n          <div>\n          {\n            // NOTE: performance seems a lot better when these mount only when clicked on\n            // some downside as it was nice to have them pre-loaded\n            // and the state doesn't remain when leaving tab and returning back to tab.\n            // for this reason search is always loaded, so that search results remain when moving between tabs.\n            // a compromise approach could be made for similar resources, where some components are dismounted and some are hiddden\n          }\n            {this.state.windowLoad === \"textCompare\" && <TextCompareWrapper info={this.props.info} relatedExpressions={this.props.relatedExpressions} hidden={this.state.windowLoad !== \"textCompare\"}/>}\n            {this.state.windowLoad === \"info\" &&  <Info info={this.props.info} relatedExpressions={this.props.relatedExpressions} topLevel={this.props.topLevel} hidden={this.state.windowLoad !== \"info\"}/>}\n            {this.state.windowLoad === \"citation\" &&  <Citation tresourceid={this.props.info.resourceid + this.props.mtFocus} manifestations={this.props.info.manifestations} handleFocusChange={this.props.handleFocusChange} hidden={this.state.windowLoad !== \"citation\"}/>}\n            {this.state.windowLoad === \"surface2\" &&  <Surface2 surfaceid={this.props.surfaceid} lineFocusId={this.props.lineFocusId} topLevel={this.props.topLevel} handleSurfaceFocusChange={this.props.handleSurfaceFocusChange} hidden={this.state.windowLoad !== \"surface2\"}/>}\n            {this.state.windowLoad === \"surface3\" &&  <Surface3Wrapper info={this.props.info} topLevel={this.props.topLevel} handleSurfaceFocusChange={this.props.handleSurfaceFocusChange} hidden={this.state.windowLoad !== \"surface3\"}/>}\n            {this.state.windowLoad === \"comments\" &&  <Comments resourceid={this.props.info.resourceid} inbox={this.props.info.inbox} hidden={this.state.windowLoad !== \"comments\"}/>}\n          </div>\n          }\n          {\n            //TODO: use of info, topLevel, itemFocus, focusResearceid, resourceid, needs to be better organized and clarified\n          }\n          {this.state.windowLoad === \"xml\" &&  <XmlView tresourceid={this.props.info ? this.props.info.resourceid + this.props.mtFocus : this.props.itemFocus.expression + this.props.mtFocus} hidden={this.state.windowLoad !== \"xml\"}/>}\n          {\n            //always load outline since it reduces number of calls, as most info is the same for all paragraphs\n          }\n          <TextOutlineWrapper focusResourceid={this.props.info ? this.props.info.resourceid : this.props.itemFocus.expression} resourceid={this.props.topLevel} title={this.props.topLevel} hidden={this.state.windowLoad !== \"textOutlineWrapper\"} mtFocus={this.props.mtFocus}/>\n          {\n            //always load search to keep search results present even when navigating two diffferent tabs\n          }\n          <SearchWrapper hidden={this.state.windowLoad !== \"search\"} topLevel={this.props.topLevel}/>\n          {\n            //<Surface surfaceid={this.props.surfaceid} topLevel={this.props.topLevel}/>\n          }\n        </div>\n      )\n\n    }\n\n  return (\n    <div className={this.props.windowType + \" \" + this.props.windowType + this.props.openWidthHeight}>\n      <WindowNavBar handleTabChange={this.props.handleTabChange}\n      handleClose={this.props.handleClose}\n      handleMinimize={this.props.handleMinimize}\n      handleMaximize={this.props.handleMaximize}\n      handleMiddlize={this.props.handleMiddlize}\n      windowType={this.props.windowType}\n      openWidthHeight={this.props.openWidthHeight}\n      windowId={this.props.windowId}\n      focus={this.props.resourceid}\n      handleSwitchWindow={this.props.handleSwitchWindow}\n      handleDuplicateWindow={this.props.handleDuplicateWindow}\n      altWindowState={this.props.altWindowState}\n      focusSet={!!this.props.info}\n      />\n      <NextPrevBar info={this.props.info} handleBlockFocusChange={this.props.handleBlockFocusChange}/>\n\n      {displayChild()}\n\n    </div>\n    );\n  }\n}\n\nexport default Window;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\n\nclass TextNavBar extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      next: \"\",\n      previous: \"\"\n    }\n  }\n  componentWillReceiveProps(nextProps){\n    this.setState({next: nextProps.next, previous: nextProps.previous})\n  }\n  render(){\n    return (\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" fixed=\"bottom\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav>\n          {this.props.previous && <NavLink className=\"nav-link\" to={\"/text?resourceid=\" + this.props.previous}>Previous</NavLink>}\n          {this.props.next && <NavLink className=\"nav-link\" to={\"/text?resourceid=\" + this.props.next}>Next</NavLink>}\n          {this.props.next && <NavLink className=\"nav-link\" to={\"/text?resourceid=\" + this.props.topLevel}>Text Home</NavLink>}\n        </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n    );\n  }\n}\n\nexport default TextNavBar;\n","import React from 'react';\n\nimport $ from 'jquery';\n\nimport {convertXMLDoc, scrollToParagraph} from './utils'\n\nclass Text extends React.Component {\n  constructor(props){\n    super(props)\n    this.retrieveText = this.retrieveText.bind(this)\n\n\n  }\n  retrieveText(doc, topLevel, scrollTo){\n    const _this = this;\n    if (doc){\n      //construct file url request ot exist db to get a cors enabled copy of the text (github does not serve files with cors enabled)\n      const doc = this.props.doc;\n      const topLevel = this.props.topLevel;\n      const docFragment = doc.split(\"/master/\")[1]\n      const topLevelFragment = topLevel.split(\"/resource/\")[1]\n\n      let xmlurl = \"\"\n      if (doc.includes(\"ipfs\")){\n        xmlurl = doc\n      }\n      else{\n        xmlurl = \"http://exist.scta.info/exist/apps/scta-app/text/\" + topLevelFragment + \"/\" + docFragment;\n      }\n      const xslurl = \"/xslt/main_view.xsl\"\n\n      //conversion done in promise in utils.js file\n      const resultDocument = convertXMLDoc(xmlurl, xslurl)\n      resultDocument.then((data) => {\n        //appendage to file\n        //and event binding\n        //happens inside promise call back\n        document.getElementById(\"text\").innerHTML = \"\";\n        document.getElementById(\"text\").appendChild(data);\n\n        $('.paragraphnumber').click(function(e) {\n           e.preventDefault();\n           const id = $(this).parent(\"p\").attr('id')\n           _this.props.setFocus(id)\n           _this.props.openWindow(\"window1\")\n         });\n         if (scrollTo){\n          scrollToParagraph(scrollTo, true)\n        }\n\n        $('.js-show-folio-image').click(function(e) {\n          e.preventDefault();\n          const surfaceid = $(this).attr('data-surfaceid');\n          const paragraphid = $(this).closest('.plaoulparagraph').attr(\"id\");\n\n          _this.props.setFocus(paragraphid)\n          _this.props.handleSurfaceFocusChange(\"http://scta.info/resource/\" + surfaceid)\n          _this.props.openWindow(\"window2\", \"surface2\")\n        });\n\n        $('.lbp-line-number').click(function(e) {\n          e.preventDefault();\n          const surfaceid = $(this).attr('data-surfaceid');\n          const ln = $(this).attr('data-ln');\n          const paragraphid = $(this).closest('.plaoulparagraph').attr(\"id\");\n\n          _this.props.setFocus(paragraphid)\n          _this.props.handleSurfaceFocusChange(\"http://scta.info/resource/\" + surfaceid)\n          _this.props.handleLineFocusChange(\"http://scta.info/resource/\" + surfaceid + \"/\" + ln)\n          _this.props.openWindow(\"window2\", \"surface2\")\n        });\n\n        $('.appnote, .footnote').click(function(e) {\n          e.preventDefault();\n        });\n        $('.appnote, .footnote').parent().mouseover(function(e) {\n             e.preventDefault();\n             const link = $(this).children('.appnote, .footnote')\n             const target = $(link).attr('href')\n             const text = $(target).html()\n            // const top = $(target).position().top;\n             //const left = $(target).position().left;\n             const noteDisplay = $(link).next(\".note-display\")\n             $(noteDisplay).removeClass(\"hidden\")\n             $(noteDisplay).html(text)\n        });\n         $('.appnote, .footnote').parent().mouseout(function(e) {\n              e.preventDefault();\n              $(\".note-display\").addClass(\"hidden\")\n          });\n\n          //TODO: this bind is working in the bottom list, but not inthe popup footnotes\n          $(document).on(\"click\", '.js-show-reference-paragraph', function(e){\n            const target = $(this).attr('data-url')\n            window.location = \"#/text?resourceid=\" + target\n          })\n        })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n\n    //check to see if doc has changed\n    if (prevProps.doc !== this.props.doc){\n      this.retrieveText(this.props.doc, this.props.topLevel, this.props.scrollTo)\n    }\n    // if doc has already been appended, still scroll to target block\n    else{\n      if (this.props.scrollTo){\n      scrollToParagraph(this.props.scrollTo, true)\n      }\n    }\n\n\n    //this.retrieveText(this.props.doc, this.props.topLevel, this.props.scrollTo)\n  }\n\n  componentDidMount(){\n    this.retrieveText(this.props.doc, this.props.topLevel, this.props.scrollTo)\n  }\n  componentWillReceiveProps(newProps){\n\n  }\n  render(){\n\n    return (\n      <div>\n        <div id=\"text\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios'\nimport Alert from 'react-bootstrap/Alert';\n\nimport {runQuery} from './utils'\nimport {versionHistoryInfo} from './Queries'\n\nclass VersionChain extends React.Component {\n  constructor(props){\n    super(props)\n    this.getVersionHistory = this.getVersionHistory.bind(this)\n    this.handleToggleShowVersions = this.handleToggleShowVersions.bind(this)\n    this.state = {\n      versions: [],\n      currentVersion: \"\",\n      showVersions: false\n    }\n  }\n  handleToggleShowVersions(){\n    this.setState((prevState) => {\n      return {showVersions: !prevState.showVersions}\n    })\n  }\n  getVersionHistory(transcriptionid){\n      const versionChainInfo = runQuery(versionHistoryInfo(transcriptionid))\n      versionChainInfo.then((d) => {\n        const b = d.data.results.bindings\n        b.forEach((b, i) => {\n          var reviewUrl = \"https://dll-review-registry.scta.info/api/v1/reviews/?url=\" + b.doc.value + \"?society=MAA\"\n          Axios(reviewUrl).then((d2) => {\n            const data = d2.data\n            var reviewObject = {}\n            if (data.length > 0){\n              reviewObject = {\n                img_url: data[0][\"badge-url\"],\n                reviewid: data[0][\"id\"],\n                ipfsHash: data[0][\"ipfs-hash\"],\n                html_link: \"https://dll-review-registry.scta.info/reviews/\" + data[0][\"id\"] + \".html\",\n                rubric_link: data[0][\"badge-rubric\"],\n                summary: data[0][\"review-summary\"]\n              }\n            }\n            this.setState((prevState) => {\n              const newVersion = {\n                versionTranscription: b.version ? b.version.value : \"\",\n                versionLabel: b.version_label ? b.version_label.value : \"\",\n                versionOrderNumber: b.order_number ? b.order_number.value : \"\",\n                versionReview: b.review ? b.review.value : \"\",\n                versionDoc: b.doc ? b.doc.value : \"\",\n                versionReviewInfo: reviewObject,\n              }\n              return {\n                versions: [...prevState.versions, newVersion],\n                currentVersion: transcriptionid\n              }\n            })\n          })\n        })\n      })\n    }\n  componentDidMount(){\n    //prevents call when itemInfo prop is not present\n    if (this.props.transcriptionid){\n      this.getVersionHistory(this.props.transcriptionid)\n    }\n  }\n  componentWillReceiveProps(newProps){\n      if (newProps.transcriptionid !== this.props.transcriptionid){\n        this.setState({versions: []}, () => {\n          this.getVersionHistory(newProps.transcriptionid)\n        })\n      }\n\n\n  }\n  render(){\n    const displayVersions = () => {\n      const versions = this.state.versions.map((v) => {\n        const currentlyViewing = v.versionTranscription === this.state.currentVersion ? \"currentlyViewing\" : \"\"\n        return (<p key={v.versionTranscription} className={currentlyViewing}>\n          {currentlyViewing ? <span>{v.versionLabel} (Currently Viewing)</span> : <span className=\"lbp-span-link\" onClick={()=>{this.props.handleFocusChange(v.versionTranscription)}}>{v.versionLabel}</span>}\n          {v.versionReviewInfo.html_link && <span> Peer Reviewed: <a href={v.versionReviewInfo.html_link}><img alt=\"review\" src={v.versionReviewInfo.img_url}/></a> </span>}\n          <span className=\"small\"> Data Source: <a href={v.versionDoc}>{v.versionDoc}</a> </span>\n          </p>)\n      })\n      return versions\n    }\n    const displayAlert = () => {\n      if (this.state.versions){\n        if (this.state.versions.length > 1){\n          return (\n            <Alert variant=\"info\">\n              <p onClick={this.handleToggleShowVersions}>This Text Has Multiple Indexed Versions</p>\n              {this.state.showVersions && displayVersions()}\n            </Alert>\n          )\n        }\n        else if (this.state.versions.length === 1){\n          const version = this.state.versions[0]\n          return (<Alert variant=\"info\">\n            <span>Version: {version.versionLabel} | Data Source: <a href={version.versionDoc}>{version.versionDoc}</a> </span>\n          </Alert>\n          )\n        }\n        else{\n          return null\n        }\n      }\n      else {\n        return null\n      }\n    }\n    return (\n      displayAlert()\n    );\n  }\n}\nVersionChain.propTypes = {\n  /**\n  * transcription resource id of focused passage,\n  * transcription id is required, because a specific text passage is being complicated\n  */\n  transcriptionid: PropTypes.string.isRequired,\n  /**\n  * handleFocusChange; a function carrying desired behavior\n  * when you user selects non-current version\n  */\n  handleFocusChange: PropTypes.func.isRequired\n}\n\nexport default VersionChain;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\n\nimport Window from \"./Window\"\nimport TextNavBar from \"./TextNavBar\"\nimport Text from \"./Text\"\nimport VersionChain from \"./VersionChain\"\nimport {runQuery, scrollToParagraph} from './utils'\n\nimport {getRelatedExpressions, basicInfoQuery, itemTranscriptionInfoQuery} from './Queries'\n\n\nclass TextWrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.mount = false\n    this.openWindow = this.openWindow.bind(this)\n    this.setFocus = this.setFocus.bind(this)\n    this.setFocus2 = this.setFocus2.bind(this)\n    this.handleTabChange = this.handleTabChange.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleMinimize = this.handleMinimize.bind(this)\n    this.handleMaximize = this.handleMaximize.bind(this)\n    this.handleMiddlize = this.handleMiddlize.bind(this)\n    this.handleSwitchWindow = this.handleSwitchWindow.bind(this)\n    this.handleDuplicateWindow = this.handleDuplicateWindow.bind(this)\n    this.handleSurfaceFocusChange = this.handleSurfaceFocusChange.bind(this)\n    this.handleLineFocusChange = this.handleLineFocusChange.bind(this)\n    this.state = {\n      doc: \"\",\n      focus: \"\",\n      //focusRelatedExpressions: \"\",\n      mtFocus: \"\",\n      itemFocus: \"\",\n      surfaceid: \"\",\n      lineFocusId: \"\",\n      windows: {\n        window1: {\n          windowId: \"window1\",\n          open: false,\n          windowLoad: \"info\",\n          position: \"sideWindow\",\n          openWidthHeight: \"middle\"\n        },\n        window2: {\n          windowId: \"window2\",\n          open: false,\n          windowLoad: \"info\",\n          position: \"bottomWindow\",\n          openWidthHeight: \"middle\"\n        }\n      }\n    }\n  }\n  openWindow(id, windowLoad){\n    if (!this.state.windows[id].open || this.state.windows[id].windowLoad !== windowLoad){\n      this.setState((prevState) => {\n        const windows = prevState.windows\n        windows[id].open = true\n        if (windowLoad){\n          windows[id].windowLoad = windowLoad\n        }\n        return {\n          windows: windows,\n        }\n      })\n    }\n  }\n  handleClose(windowId){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].open = false\n      return {windows: windows}\n\n    })\n    //scroll is supposed to re-align text scroll to focused paragraph after side bar close.\n    //but it is not quite working\n    scrollToParagraph(this.state.blockFocus, true)\n\n  }\n  handleMinimize(windowId){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].openWidthHeight = \"minimum\"\n      return {windows: windows}\n\n    })\n  }\n  handleMaximize(windowId){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].openWidthHeight = \"maximum\"\n      return {windows: windows}\n\n    })\n  }\n  handleMiddlize(windowId){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].openWidthHeight = \"middle\"\n      return {windows: windows}\n\n    })\n  }\n  handleSwitchWindow(windowId, windowType){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      if (windows[windowId].position === \"sideWindow\"){\n        windows[windowId].position = \"bottomWindow\"\n        // these conditionals control whether an already existing window will be closed when the other is moved\n        // while commented they allow window1 and window2 to stack on top of each other\n\n        // if (windowId === \"window1\"){\n        //   windows[\"window2\"].open = false\n        // }\n        // else if ((windowId === \"window2\")){\n        //   windows[\"window1\"].open = false\n        // }\n      }\n      else if (windows[windowId].position === \"bottomWindow\"){\n        windows[windowId].position = \"sideWindow\"\n        // these conditionals control whether an already existing window will be closed when the other is moved\n        // while commented they allow window1 and window2 to stack on top of each other\n\n        // if (windowId === \"window1\"){\n        //   windows[\"window2\"].open = false\n        // }\n        // else if ((windowId === \"window2\")){\n        //   windows[\"window1\"].open = false\n        // }\n      }\n      return {windows: windows}\n\n    })\n  }\n  handleDuplicateWindow(windowId, windowType){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      const altWindowId = windowId === \"window1\" ? \"window2\" : \"window1\"\n      if (windows[windowId].position === \"sideWindow\"){\n        windows[altWindowId].position = \"bottomWindow\"\n        windows[altWindowId].open = true\n      }\n      else if (windows[windowId].position === \"bottomWindow\"){\n        windows[altWindowId].position = \"sideWindow\"\n        windows[altWindowId].open = true\n      }\n      return {windows: windows}\n    })\n  }\n  handleTabChange(windowLoad, windowId){\n\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].windowLoad = windowLoad\n      return {windows: windows}\n\n    })\n\n  }\n\n  handleSurfaceFocusChange(surfaceid){\n    this.setState({surfaceid: surfaceid})\n  }\n  handleLineFocusChange(lineFocusId){\n    this.setState({lineFocusId: lineFocusId})\n  }\n  //TODO\n  //These two function should be refactored into one\n  setFocus(id){\n    const fullid = id.includes(\"http\") ? id + this.state.mtFocus : \"http://scta.info/resource/\" + id + this.state.mtFocus\n    this.props.handleUpdateUrlResource(fullid)\n  }\n  setFocus2(newid){\n    this.props.handleUpdateUrlResource(newid)\n  }\n  //END TODO\n\n\n  retrieveFocusInfo(id){\n    const fullid = id.includes(\"http\") ? id : \"http://scta.info/resource/\" + id\n    // get info\n    const info = runQuery(basicInfoQuery(fullid))\n    //arrange info and set it to state\n\n    this.arrangeFocusInfo(info, fullid)\n    // get related expressions info\n    // removed these second calls and embed the query in arrange focus info to keep information in sync.\n    // TODO remove below three lines\n    //const relatedExpressions = runQuery(getRelatedExpressions(fullid))\n    //arrange info and set it to state\n    //this.arrangeFocusRelatedInfo(relatedExpressions)\n\n    //scrollToParagraph(shortid, true)\n\n  }\n\n  arrangeFocusInfo(info, resourceid){\n      info.then((d) => {\n        const bindings = d.data.results.bindings[0]\n        const manifestations = d.data.results.bindings.map((b) => {\n          return {\n            manifestation: b.manifestation.value,\n            manifestationTitle: b.manifestationTitle.value,\n            transcription: b.manifestationCTranscription.value\n          }\n        })\n        // TODO the need for this 2nd query and async call might\n        // be able to be removed using a construct query\n        // see example pattern in articles collection\n        const relatedExpressions = runQuery(getRelatedExpressions(resourceid))\n        relatedExpressions.then((d) => {\n          const bindings2 = d.data.results.bindings\n          const relatedExpressions = bindings2.map((r) => {\n              return {\n                resourceid: r.isRelatedTo.value,\n                relationLabel: r.label.value\n              }\n            });\n\n          if (this.mount){\n            this.setState({\n              focus: {\n                resourceid: resourceid,\n                title: bindings.title.value,\n                longTitle: bindings.longTitle ? bindings.longTitle.value : \"\",\n                author: bindings.author ? bindings.author.value : \"\",\n                authorTitle: bindings.authorTitle ? bindings.authorTitle.value : \"\",\n                structureType: bindings.structureType.value,\n                inbox: bindings.inbox.value,\n                next: bindings.next ? bindings.next.value : \"\",\n                previous: bindings.previous ? bindings.previous.value : \"\",\n                cdoc: bindings.cdoc.value,\n                cxml: bindings.cxml.value,\n                topLevel: bindings.topLevelExpression.value,\n                cmanifestation: bindings.cmanifestation.value,\n                ctranscription: bindings.ctranscription.value,\n                manifestations: manifestations,\n                relatedExpressions: relatedExpressions\n              }\n            });\n          }\n        })\n      });\n    }\n  // embeded this within arrang focus info, so that information remains in sync\n  // TODO remove this\n    // arrangeFocusRelatedInfo(relatedInfo){\n    //     relatedInfo.then((d) => {\n    //       console.log(\"new data\", d)\n    //       const bindings = d.data.results.bindings\n    //       const relatedExpressions = bindings.map((r) => {\n    //           return {\n    //             resourceid: r.isRelatedTo.value,\n    //             relationLabel: r.label.value\n    //           }\n    //         });\n    //     if (this.mount){\n    //       this.setState({\n    //         focusRelatedExpressions: relatedExpressions\n    //       });\n    //       }\n    //     });\n    //   }\n    setItemFocus(id){\n      const fullid = id.includes(\"http\") ? id : \"http://scta.info/resource/\" + id\n      // get info\n      const info = runQuery(itemTranscriptionInfoQuery(fullid))\n      this.arrangeItemFocusInfo(info)\n    }\n    arrangeItemFocusInfo(itemFocusInfo){\n        itemFocusInfo.then((d) => {\n          const bindings = d.data.results.bindings[0]\n          if (this.mount){\n            this.setState({\n              itemFocus: {\n                title: bindings.title.value,\n                manifestation: bindings.manifestation.value,\n                expression: bindings.expression.value,\n                doc: bindings.doc.value,\n                xml: bindings.xml.value,\n                next: bindings.next ? bindings.next.value : \"\",\n                previous: bindings.previous ? bindings.previous.value : \"\",\n                inbox: bindings.inbox.value,\n                topLevel: bindings.topLevelExpression.value,\n                transcriptionid: bindings.t.value\n              }\n            });\n          }\n        });\n      }\n\n  componentDidMount(){\n    this.mount = true\n\n    this.setItemFocus(this.props.transcriptionid)\n\n    const mFocus = this.props.transcriptionid.split(\"/resource/\")[1].split(\"/\")[1]\n    const tFocus = this.props.transcriptionid.split(\"/resource/\")[1].split(\"/\")[2]\n    this.setState({mtFocus: \"/\" + mFocus + \"/\" + tFocus})\n\n    if (this.props.blockDivFocus){\n      this.retrieveFocusInfo(this.props.blockDivFocus)\n    }\n  }\n  componentWillReceiveProps(newProps){\n    //Keep test, but it seems like this look up only needs to fire, when the transcription id prop changes\n    // not when other props changes.\n    if (newProps.transcriptionid !== this.props.transcriptionid){\n      this.setItemFocus(newProps.transcriptionid)\n      const mFocus = newProps.transcriptionid.split(\"/resource/\")[1].split(\"/\")[1]\n      const tFocus = newProps.transcriptionid.split(\"/resource/\")[1].split(\"/\")[2]\n      this.setState({mtFocus: \"/\" + mFocus + \"/\" + tFocus})\n    }\n\n\n\n    if (!newProps.blockDivFocus){\n      this.setState({focus: \"\"});\n    }\n    else if (newProps.blockDivFocus !== this.props.blockDivFocus){\n      this.retrieveFocusInfo(newProps.blockDivFocus)\n    }\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n  render(){\n    const displayWindows = () => {\n      const windows = Object.keys(this.state.windows).map((key) => {\n        if (this.state.windows[key].open){\n          return (<Window\n              key={key}\n              handleClose={this.handleClose}\n              handleMinimize={this.handleMinimize}\n              handleMaximize={this.handleMaximize}\n              handleMiddlize={this.handleMiddlize}\n              handleTabChange={this.handleTabChange}\n              handleBlockFocusChange={this.setFocus}\n              handleFocusChange={this.setFocus2}\n              handleSurfaceFocusChange={this.handleSurfaceFocusChange}\n              handleSwitchWindow={this.handleSwitchWindow}\n              handleDuplicateWindow={this.handleDuplicateWindow}\n              resourceid={this.state.focus ? this.state.focus.resourceid : this.props.resourceid}\n              windowType={this.state.windows[key].position}\n              windowId={this.state.windows[key].windowId}\n              windowLoad={this.state.windows[key].windowLoad}\n              openWidthHeight={this.state.windows[key].openWidthHeight}\n              surfaceid={this.state.surfaceid}\n              lineFocusId={this.state.lineFocusId}\n              info={this.state.focus}\n              itemFocus={this.state.itemFocus}\n              topLevel={this.state.itemFocus.topLevel}\n              altWindowState={this.state.windows[key].windowId === \"window1\" ? this.state.windows[\"window2\"].open : this.state.windows[\"window1\"].open}\n              mtFocus={this.state.mtFocus}\n              />\n            )\n          }\n          else{\n            return null\n          }\n        })\n        return windows\n      }\n    const textClass = () => {\n      let aSideWindowOpen = false;\n      if (this.state.windows.window1.open && this.state.windows.window1.position === \"sideWindow\" && this.state.windows.window1.openWidthHeight === \"middle\"){\n        aSideWindowOpen = true\n      }\n      else if (this.state.windows.window2.open && this.state.windows.window2.position === \"sideWindow\"){\n        aSideWindowOpen = true\n      }\n      return aSideWindowOpen\n    }\n\n    return (\n      <div>\n        {this.state.itemFocus &&\n          <VersionChain transcriptionid={this.state.itemFocus.transcriptionid} handleFocusChange={this.setFocus2}/>\n        }\n        <Container className={textClass() ? \"lbp-text skinnyText\" : \"lbp-text fullText\"}>\n          {this.state.itemFocus &&\n          <Text\n            doc={this.state.itemFocus.doc}\n            topLevel={this.state.itemFocus.topLevel}\n            setFocus={this.setFocus}\n            handleSurfaceFocusChange={this.handleSurfaceFocusChange}\n            handleLineFocusChange={this.handleLineFocusChange}\n            openWindow={this.openWindow}\n            scrollTo={this.state.focus ? this.state.focus.resourceid.split(\"/resource/\")[1] : this.state.itemFocus.expression.split(\"/resource/\")[1]}\n            />\n          }\n        </Container>\n        <TextNavBar\n          next={this.state.itemFocus && this.state.itemFocus.next}\n          previous={this.state.itemFocus && this.state.itemFocus.previous}\n          topLevel={this.state.itemFocus && this.state.itemFocus.topLevel}\n          handleClose={this.handleClose}\n        />\n        <div>\n        {\n        // <TextNavBar\n        // next={this.state.items[this.state.itemFocus] && this.state.items[this.state.itemFocus].next}\n        // previous={this.state.items[this.state.itemFocus] && this.state.items[this.state.itemFocus].previous}\n        // topLevel={this.state.items[this.state.itemFocus] && this.state.items[this.state.itemFocus].topLevel}\n        // handleClose={this.handleClose}\n        // />\n        }\n        {displayWindows()}\n        </div>\n      </div>\n    );\n  }\n}\nexport default TextWrapper;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nfunction Item(props) {\n  const displayItem = () => {\n    // conditions prevents attempt to render when props.item is not present\n    if (props.item){\n      return (\n        <tr>\n          {props.item.author && <td><Link to={\"/text?resourceid=\" + props.item.author}>{props.item.authorTitle}</Link></td>}\n          <td><Link to={\"/text?resourceid=\" + props.item.id}>{props.item.title}</Link></td>\n          {props.item.questionTitle ? <td><Link to={\"/text?resourceid=\" + props.item.id}>{props.item.questionTitle}</Link></td> : <td/>}\n        </tr>\n      )\n    }\n    else{\n      return null\n    }\n  }\n  return (\n    displayItem()\n  );\n}\n\nexport default Item;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nimport FormControl from 'react-bootstrap/FormControl';\nimport Table from 'react-bootstrap/Table';\n\nimport {runQuery} from './utils'\nimport {basicStructureAllItemsInfoQuery, partsInfoQuery,workGroupExpressionQuery} from './Queries'\n\nimport Item from \"./Item\"\n\n//import Lbp from \"lbp.js/lib\"\n\n\nclass Collection extends React.Component {\n  constructor(props){\n    super(props)\n    this.retrieveCollectionInfo = this.retrieveCollectionInfo.bind(this)\n    this.makeRequests = this.makeRequests.bind(this)\n    this.handleFilter = this.handleFilter.bind(this)\n    this.filter = React.createRef();\n    this.mount = false\n    this.state = {\n      items: {},\n      parts: {},\n      filter: \"\"\n    }\n\n  }\n  handleFilter(e){\n    const item = e.target.value\n    this.setState({filter: item})\n\n  }\n  arrangeParts(partsPromise){\n    const _this = this\n    partsPromise.then((d) => {\n        const bindings = d.data.results.bindings\n        let partsObject = {}\n        bindings.forEach((b) => {\n          const pId = b.part.value\n          partsObject[pId] = {\n            id: b.part.value,\n            title: b.partTitle.value,\n            type: b.partType.value,\n            questionTitle: b.partQuestionTitle ? b.partQuestionTitle.value : null,\n            level: b.partLevel ? b.partLevel.value : \"unknown\",\n        }\n      });\n      if (this.mount){\n        _this.setState(\n          {\n            parts: partsObject\n          }\n        )\n      }\n    });\n  }\n  arrangeItems(itemsPromise){\n    const _this = this\n    itemsPromise.then((d) => {\n      const bindings = d.data.results.bindings\n      let itemsObject = {}\n      bindings.forEach((b) => {\n        const itemId = b.item.value\n        itemsObject[itemId] = {\n          title: b.itemTitle.value,\n          id: b.item.value,\n          type: b.itemType.value,\n          questionTitle: b.itemQuestionTitle ? b.itemQuestionTitle.value : null,\n          author: b.itemAuthor ? b.itemAuthor.value : null,\n          authorTitle: b.itemAuthorTitle ? b.itemAuthorTitle.value : null,\n          next: b.next ? b.next.value : null,\n          previous: b.previous ? b.previous.value : null,\n          cm: b.cm ? b.cm.value : null,\n          cmTitle: b.cmTitle ? b.cmTitle.value : null,\n          ct: b.ct ? b.ct.value : null,\n          topLevel: b.topLevel ? b.topLevel.value : null,\n          doc: b.doc ? b.doc.value : null\n        }\n      });\n      if (this.mount){\n        _this.setState(\n          {\n            items: itemsObject\n          }\n        )\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n  retrieveWorkGroupInfo(resourceid){\n    const expressionsInfo = runQuery(workGroupExpressionQuery(resourceid))\n    const partsInfo = runQuery(partsInfoQuery(resourceid))\n    this.arrangeParts(partsInfo)\n    this.arrangeItems(expressionsInfo)\n  }\n  retrieveCollectionInfo(resourceid, structureType, topLevel){\n    const collectionInfo = runQuery(basicStructureAllItemsInfoQuery(topLevel))\n    const partsInfo = runQuery(partsInfoQuery(resourceid))\n\n    //add parts to state\n    this.arrangeParts(partsInfo)\n    /// add items to state\n    this.arrangeItems(collectionInfo)\n  }\n  makeRequests(newResourceId, structureType, topLevel, type){\n\n    //\n    //   // get all expressions for this workGroup\n      if (type === \"http://scta.info/resource/workGroup\"){\n          this.retrieveWorkGroupInfo(newResourceId, structureType, topLevel)\n          //this.setState({itemFocus: \"\"})\n      }\n      // get all items for this collection\n      else if (structureType === \"http://scta.info/resource/structureCollection\"){\n          this.retrieveCollectionInfo(newResourceId, structureType, topLevel)\n          //this.setState({itemFocus: \"\"})\n      }\n\n  }\n  componentDidUpdate(prevProps, prevState){\n\n  }\n  componentDidMount(){\n    this.mount = true\n    this.setState({resourceid: this.props.resourceid})\n    this.makeRequests(this.props.resourceid, this.props.structureType, this.props.topLevel, this.props.type)\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n\n    // conditional prevents new information requestion if resource id has not changed\n    if (nextProps.resourceid !== this.props.resourceid){\n      this.setState({resourceid: nextProps.resourceid, filter: \"\"})\n      // this conditional resets form value if ref is present\n      if (this.filter){\n        this.filter.current.value = \"\"\n      }\n      this.makeRequests(nextProps.resourceid, nextProps.structureType, nextProps.topLevel, nextProps.type)\n    }\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n  render(){\n    //const resourceid = Qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).resourceid;\n\n    const displayQuestions = () => {\n      const questions = []\n      Object.keys(this.state.items).forEach((key) => {\n        const filterCheck = this.state.items[key].title + \" \" + this.state.items[key].authorTitle + \" \" + this.state.items[key].questionTitle\n        if (filterCheck.toLowerCase().includes(this.state.filter.toLowerCase())){\n        questions.push(\n          <Item key={key} item={this.state.items[key]}/>\n        )}\n      });\n      return (\n        <Container>\n\n        <h1>Items</h1>\n        <br/>\n        <Table striped bordered hover size=\"sm\">\n        <tbody>\n        {questions}\n        </tbody>\n        </Table>\n        </Container>\n      )\n    }\n    const displayParts = () => {\n        const questions = []\n        Object.keys(this.state.parts).forEach((key) => {\n          //check against filter\n            if (this.state.parts[key].title.toLowerCase().includes(this.state.filter.toLowerCase())){\n            questions.push(\n              <Item key={key} item={this.state.parts[key]}/>\n              )\n            }\n\n        });\n        //check against top level expression as parts; if parts are top level expression; don't display parts\n        const testPart = this.state.parts[Object.keys(this.state.parts)[0]]\n        if (testPart){\n          if (!(testPart.type === \"http://scta.info/resource/expression\" && testPart.level === \"1\")){\n            return (\n              <Container>\n              <h1>Parts</h1>\n              <br/>\n              <Table striped bordered hover size=\"sm\">\n              <tbody>\n              {questions}\n              </tbody>\n              </Table>\n              </Container>\n            )\n          }\n        }\n      }\n\n    return (\n      <Container className=\"collectionBody\">\n      {}\n      <Container className=\"collectionFilter\">\n        <FormControl ref={this.filter} id=\"filter\" placeholder=\"type to filter\" onChange={this.handleFilter}/>\n      </Container>\n      {displayParts()}\n      {displayQuestions()}\n      </Container>\n    );\n  }\n}\n\nexport default Collection;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table';\nimport {runQuery} from './utils'\nimport {getAuthorInformation} from './Queries'\nimport Item from \"./Item\"\n\n//import Lbp from \"lbp.js/lib\"\n\n\nclass AuthorCollection extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.retrieveAuthorCollectionInfo = this.retrieveAuthorCollectionInfo.bind(this)\n    this.handleItemFilter = this.handleItemFilter.bind(this)\n    this.itemFilter = React.createRef();\n\n    this.mount = false\n    this.state = {\n      authorTitle: \"\",\n      authorArticles: [],\n      textArticles: [],\n      expressions: [],\n      itemFilter: \"\",\n    }\n\n  }\n  handleItemFilter(e){\n    const item = e.target.value\n    this.setState({itemFilter: item})\n\n  }\n  arrangeItems(itemsPromise, resourceid){\n    itemsPromise.then((d) => {\n      console.log(\"data\", d)\n      const author = d.data[\"@graph\"].filter((i) => i[\"@id\"] === resourceid)[0]\n      console.log(\"author\", author)\n      //const authorExpressions = d.data[\"@graph\"].filter((i) => {i[\"@id\"] === author.hasTopLevelExpression})\n      const authorTitle = author[\"http://purl.org/dc/elements/1.1/title\"]\n      let authorArticles = null\n      if(Array.isArray(author.authorArticle)){\n        authorArticles =  author.authorArticle.map((a) => {\n          return {\n            id: a,\n            title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === a)[0][\"http://purl.org/dc/elements/1.1/title\"]\n          }\n        })\n      }\n      else{\n        authorArticles = [{id: author.autherArticle, title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === author.autherArticle)[0][\"http://purl.org/dc/elements/1.1/title\"]}]\n      }\n      let textArticles = null\n      if(Array.isArray(author.textArticle)){\n          textArticles =  author.textArticle.map((a) => {\n          return {\n            id: a,\n            title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === a)[0][\"http://purl.org/dc/elements/1.1/title\"]\n          }\n        })\n      }\n      else{\n        textArticles = [{id: author.textArticle, title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === author.textArticle)[0][\"http://purl.org/dc/elements/1.1/title\"]}]\n      }\n\n      let expressions = null\n      if(Array.isArray(author.hasTopLevelExpression)){\n        expressions =  author.hasTopLevelExpression.map((a) => {\n          return {\n            id: a,\n            title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === a)[0][\"http://purl.org/dc/elements/1.1/title\"]\n          }\n        })\n      }\n      else{\n        expressions = [{id: author.hasTopLevelExpression, title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === author.hasTopLevelExpression)[0][\"http://purl.org/dc/elements/1.1/title\"]}]\n      }\n      this.setState({authorArticles: authorArticles, textArticles: textArticles, expressions: expressions, authorTitle: authorTitle })\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n  retrieveAuthorCollectionInfo(resourceid){\n    const authorCollectionInfo = runQuery(getAuthorInformation(resourceid))\n    /// add items to state\n    this.arrangeItems(authorCollectionInfo, resourceid)\n  }\n  componentDidUpdate(prevProps, prevState){\n\n  }\n  componentDidMount(){\n    this.mount = true\n    this.retrieveAuthorCollectionInfo(this.props.resourceid)\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.refs.itemFilter ? this.refs.itemFilter.value = \"\" :\n    this.retrieveAuthorCollectionInfo(nextProps.resourceid)\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n  render(){\n    //const resourceid = Qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).resourceid;\n\n    const displayItems = (list) => {\n      const items = list.map((i) => {\n        return (\n\n          <Item item={i}/>\n\n        )\n      });\n      return items\n    }\n\n\n\n\n\n\n    return (\n      <div className=\"collectionBody\">\n      <h1>{this.state.authorTitle}</h1>\n      <br/>\n      {this.state.expressions &&\n        <Container>\n        <h1>Expressions</h1>\n        <br/>\n        <Table striped bordered hover size=\"sm\">\n        <tbody>\n        {displayItems(this.state.expressions)}\n        </tbody>\n        </Table>\n        </Container>\n      }\n      {this.state.authorArticles &&\n        <Container>\n        <h1>Author Related Articles</h1>\n        <br/>\n        <Table striped bordered hover size=\"sm\">\n        <tbody>\n        {displayItems(this.state.authorArticles)}\n        </tbody>\n        </Table>\n        </Container>\n      }\n      {this.state.textArticles &&\n        <Container>\n        <h1>Text Related Articles</h1>\n        <br/>\n        <Table striped bordered hover size=\"sm\">\n        <tbody>\n        {displayItems(this.state.textArticles)}\n        </tbody>\n        </Table>\n        </Container>\n      }\n      </div>\n    );\n  }\n}\n\nexport default AuthorCollection;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Surface2 from './Surface2'\nimport {Link} from 'react-router-dom';\n\nimport {runQuery} from './utils'\nimport {getCodexInfo} from './Queries'\n\nclass Codex extends React.Component {\n  constructor(props){\n    super(props)\n    this.retrieveCodexInfo = this.retrieveCodexInfo.bind(this)\n    this.handleSurfaceFocusChange = this.handleSurfaceFocusChange.bind(this)\n    this.handleToggleShowContents = this.handleToggleShowContents.bind(this)\n    this.state = {\n      items: {},\n      title: \"\",\n      focusedSurface: \"\",\n      relatedCodices: [],\n      showContents: false\n    }\n  }\n  handleToggleShowContents(){\n    this.setState((prevState) => {\n      return{\n        showContents: !prevState.showContents\n      }\n    })\n  }\n  handleSurfaceFocusChange(surfaceid){\n    this.setState({focusedSurface: surfaceid})\n  }\n  retrieveCodexInfo(codexid){\n    const codexInfo = runQuery(getCodexInfo(codexid))\n    codexInfo.then((d) => {\n      const data = d.data.results.bindings\n      if (data.length > 0 && data[0].surface){\n        this.setState({focusedSurface: data[0].surface.value})\n        const expressionIdMap = data.map((d) => {\n          return d.expression ? d.expression.value : \"\"\n        })\n        var unique = expressionIdMap.filter((v, i, a) => a.indexOf(v) === i);\n        let expressionList = {}\n        unique.forEach((e) => {\n           expressionList[e] = []\n        })\n        data.forEach((d) => {\n            const info = {\n              expression: d.expression.value,\n              expressionTitle: d.item_expression_title.value,\n              manifestation: d.manifestation.value,\n              surface: d.surface.value,\n              surfaceTitle: d.surface_title.value,\n              questionTitle: d.item_expression_question_title ? d.item_expression_question_title.value : ''\n            }\n          expressionList[d.expression.value].push(info)\n        })\n        this.setState({items: expressionList})\n\n      }\n    })\n  }\n  componentDidMount(){\n    this.retrieveCodexInfo(this.props.codexid)\n  }\n\n  render(){\n    const displayItems = () => {\n      const items = Object.keys(this.state.items).map((key) => {\n        return (\n          <p key={this.state.items[key][0].expression}>\n          <span>\n              <span className=\"codexLink\" onClick={() => {this.handleSurfaceFocusChange(this.state.items[key][0].surface)}}>\n                {this.state.items[key][0].surfaceTitle}</span>{\" - \"}\n              <span className=\"codexLink\" onClick={() => {this.handleSurfaceFocusChange(this.state.items[key][this.state.items[key].length - 1].surface)}}>\n                {this.state.items[key][this.state.items[key].length - 1].surfaceTitle}\n              </span>\n            </span>{\": \"}\n            <Link to={\"/text?resourceid=\" + this.state.items[key][0].manifestation}>{this.state.items[key][0].expressionTitle}</Link>{\": \"}\n            {this.state.items[key][0].questionTitle && this.state.items[key][0].questionTitle}\n          </p>\n\n        )\n      })\n      return items\n    }\n    return (\n      <Container className=\"Codex\">\n      <h1>{this.props.codexid}</h1>\n      <div className=\"codexWrapper\">\n        <div className=\"codexContentsWrapper\">\n          <div className=\"codexContents\">\n          <h2 onClick={this.handleToggleShowContents}>{this.state.showContents ? \"Hide Contents\" : \"View Contents\"}</h2>\n          {this.state.showContents && this.state.items && displayItems()}\n          </div>\n          <div className=\"codexRelations\">\n            <h2>Show relations</h2>\n          </div>\n        </div>\n        <div className=\"codexImage\">\n          {this.state.focusedSurface &&\n            <Surface2 surfaceid={this.state.focusedSurface} lineFocusId=\"\" topLevel={this.props.topLevel} handleSurfaceFocusChange={this.handleSurfaceFocusChange} width={500} hidden={false}/>\n          }\n         </div>\n      </div>\n\n      </Container>\n    );\n  }\n}\n\nexport default Codex;\n","import React from 'react';\nimport Qs from \"query-string\"\nimport TextWrapper from \"./TextWrapper\"\nimport Collection from \"./Collection\"\nimport AuthorCollection from \"./AuthorCollection\"\nimport Codex from \"./Codex\"\nimport TextOutlineWrapper from \"./TextOutlineWrapper\"\nimport Container from 'react-bootstrap/Container';\n\nimport {runQuery} from './utils'\nimport {getItemTranscription, getItemTranscriptionFromBlockDiv, getStructureType} from './Queries'\n\nclass TextSwitch extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleUpdateUrlResource = this.handleUpdateUrlResource.bind(this)\n    this.state = {\n      displayType: \"\",\n      resourceid: \"\",\n      itemTranscriptionId: \"\",\n      blockDivFocus: \"\",\n      resourceTitle: \"\",\n      author: \"\"\n    }\n  }\n  handleUpdateUrlResource(fullid){\n    this.props.history.push({search: '?resourceid=' + fullid})\n  }\n  getInfo(resourceid){\n    const structureTypePromise = runQuery(getStructureType(resourceid))\n    structureTypePromise.then((t) => {\n      const type = t.data.results.bindings[0].type.value\n      const structureType = t.data.results.bindings[0].structureType ? t.data.results.bindings[0].structureType.value : null\n      //const level = t.data.results.bindings[0].level ? t.data.results.bindings[0].level.value : null\n      const topLevel = t.data.results.bindings[0].topLevel ? t.data.results.bindings[0].topLevel.value : resourceid\n      const itemParent = t.data.results.bindings[0].itemParent ? t.data.results.bindings[0].itemParent.value : null\n      const resourceTitle = t.data.results.bindings[0].resourceTitle ? t.data.results.bindings[0].resourceTitle.value : \"\"\n      const author = t.data.results.bindings[0].author ? t.data.results.bindings[0].author.value : \"\"\n\n      //const itemTranscriptionId = t.data.results.bindings[0].ctranscription ? t.data.results.bindings[0].ctranscription.value : null\n      if (type === \"http://scta.info/resource/person\"){\n          this.setState({displayType: \"person\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: type, resourceTitle: resourceTitle})\n      }\n      else if (type === \"http://scta.info/resource/codex\"){\n          this.setState({displayType: \"codex\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: type, resourceTitle: resourceTitle})\n      }\n      else if (type === \"http://scta.info/resource/workGroup\"){\n          this.setState({displayType: \"workGroup\", resourceid: resourceid, structureType: structureType, topLevel: topLevel, type: type, resourceTitle: resourceTitle})\n      }\n      else if (structureType === \"http://scta.info/resource/structureCollection\"){\n          this.setState({displayType: \"collection\", resourceid: resourceid, structureType: structureType, topLevel: topLevel, type: type, resourceTitle: resourceTitle, author: author})\n      }\n      else if (structureType === \"http://scta.info/resource/structureItem\" ){\n        if (type === \"http://scta.info/resource/transcription\"){\n          this.setState({itemTranscriptionId: resourceid, displayType: \"item\", blockDivFocus: \"\", resourceTitle: resourceTitle})\n        }\n        else {\n          const structureTypePromise = runQuery(getItemTranscription(resourceid))\n          structureTypePromise.then((t) => {\n            this.setState({itemTranscriptionId: t.data.results.bindings[0].ctranscription.value, displayType: \"item\", blockDivFocus: \"\", resourceTitle: resourceTitle})\n          });\n        }\n      }\n      else if (structureType === \"http://scta.info/resource/structureBlock\" || structureType === \"http://scta.info/resource/structureDivision\" ){\n        const structureTypePromise = runQuery(getItemTranscriptionFromBlockDiv(resourceid))\n        structureTypePromise.then((t) => {\n          if (type === \"http://scta.info/resource/transcription\"){\n            this.setState({itemTranscriptionId: itemParent, blockDivFocus: t.data.results.bindings[0].blockDivExpression.value, displayType: \"item\", resourceTitle: resourceTitle})\n          }\n          else if (type === \"http://scta.info/resource/expression\"){\n            this.setState({itemTranscriptionId: t.data.results.bindings[0].ctranscription.value, blockDivFocus: resourceid, displayType: \"item\", resourceTitle: resourceTitle})\n          }\n          else {\n            this.setState({itemTranscriptionId: t.data.results.bindings[0].ctranscription.value, blockDivFocus: t.data.results.bindings[0].blockDivExpression.value, displayType: \"item\", resourceTitle: resourceTitle})\n          }\n        });\n      }\n    });\n  }\n\n  componentDidMount(){\n    const newResourceId = Qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).resourceid\n    this.getInfo(newResourceId)\n  }\n  componentWillReceiveProps(nextProps) {\n    const newResourceId = Qs.parse(nextProps.location.search, { ignoreQueryPrefix: true }).resourceid\n    this.getInfo(newResourceId)\n  }\n\n\n\n  render(){\n    const display = () => {\n      if (this.state.displayType === \"person\"){\n        return (<AuthorCollection resourceid={this.state.resourceid}/>)\n\n      }\n      else if (this.state.displayType === \"workGroup\"){\n        return (\n          <Collection resourceid={this.state.resourceid} structureType={this.state.structureType} topLevel={this.state.topLevel} type={this.state.type}/>\n        )\n      }\n      else if (this.state.displayType === \"collection\"){\n        console.log(\"this.state.author\", this.state.author)\n        return (\n          <Container className=\"textOutlineContainer\">\n            <TextOutlineWrapper\n              focusResourceid={this.state.resourceid}\n              resourceid={this.state.resourceid}\n              title={this.state.resourceTitle}\n              hidden={false}\n              mtFocus={\"\"}\n              collectionLink={true}/>\n          </Container>\n        )\n\n\n      }\n      else if (this.state.displayType === \"item\"){\n        return (<TextWrapper itemid={this.state.resourceid} transcriptionid={this.state.itemTranscriptionId} blockDivFocus={this.state.blockDivFocus} handleUpdateUrlResource={this.handleUpdateUrlResource}/>)\n      }\n      else if (this.state.displayType === \"codex\"){\n        return (<Codex codexid={this.state.resourceid}/>)\n      }\n      else{\n        return null\n      }\n    }\n  return (\n    display()\n    );\n  }\n\n}\n\nexport default TextSwitch;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <div className=\"About\">\n    <h1>About</h1>\n\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction CodexListItem(props) {\n  return (\n    <p><Link to={\"/text?resourceid=\" + props.codexid}>{props.title}</Link></p>\n  );\n}\n\nexport default CodexListItem;\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\n\nimport CodexListItem from './CodexListItem'\nimport {runQuery} from './utils'\nimport {getCodices} from './Queries'\n\nclass Codices extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      codices: []\n    }\n  }\n  retrieveCodices(){\n    const codicesInfo = runQuery(getCodices())\n    codicesInfo.then((d) => {\n      const codices = this.arrangeCodexInfo(d.data.results.bindings)\n      this.setState({codices: codices})\n    })\n\n  }\n  arrangeCodexInfo(data){\n    const codices = data.map((d) => {\n      return {\n        codexid: d.codex ? d.codex.value : \"\",\n        title: d.codex_title ? d.codex_title.value : \"\"\n      }\n    })\n    return codices\n  }\n  componentDidMount(){\n    this.retrieveCodices()\n  }\n  render(){\n    const displayCodices = () => {\n      const codices = this.state.codices.map((d) => {\n        return <CodexListItem key={d.id} codexid={d.codexid} title={d.title}/>\n      })\n      return codices\n    }\n  return (\n    <Container className=\"Codices\">\n    <h1>Codices</h1>\n    {displayCodices()}\n    </Container>\n  );\n}\n}\n\nexport default Codices;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport {resourceEndpoint} from './config';\n\nfunction NavBar() {\n  return (\n    <Navbar bg=\"dark\" variant=\"light\" expand=\"lg\" fixed=\"top\">\n      <Nav>\n        <NavLink className=\"nav-link\" to=\"/\">SCTA Reading Room</NavLink>\n      </Nav>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav>\n\n\n\n        <NavLink className=\"nav-link\" to={\"/text?resourceid=\" + resourceEndpoint}>Text</NavLink>\n        {// example drop down\n          // <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n        //   <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        //   <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        //   <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        //   <NavDropdown.Divider />\n        //   <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n        // </NavDropdown>\n      }\n      <NavLink className=\"nav-link\" to=\"/search\">Search</NavLink>\n      </Nav>\n\n      <Nav>\n        <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\n        <NavLink className=\"nav-link\" to=\"/donate\">Donate</NavLink>\n      </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\n\n\n\nfunction Footer() {\n  return (\n    <Container className=\"lbp-footer\" fluid>\n    <Row>\n    <Col>\n    <p>Designed by <a href=\"http://jeffreycwitt.com\">Jeffrey C. Witt</a></p>\n    </Col>\n    <Col>\n    <p>A <a href=\"http://lombardpress.org\">LombardPress</a> Publication</p>\n    </Col>\n    <Col>\n    <p>Powered by <a href=\"http://scta.info\">SCTA</a> Data</p>\n    </Col>\n    </Row>\n    </Container>\n\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport Home from \"./Home\"\nimport SearchWrapper from \"./SearchWrapper\"\nimport TextSwitch from \"./TextSwitch\"\nimport About from \"./About\"\nimport Codices from \"./Codices\"\nimport NavBar from './NavBar';\n\n\n\nimport Footer from './Footer';\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport '../styles/App.scss';\n//import '../styles/index.scss';\n\nconst AppRouter = () => (\n  <HashRouter forceRefresh={false}>\n    <div>\n      <NavBar/>\n      <Switch>\n        <Route path=\"/\" exact={true} component={Home}/>\n        <Route path=\"/text\"  exact={true} component={TextSwitch}/>\n        <Route path=\"/about\" exact={true} component={About}/>\n        <Route path=\"/codices\" exact={true} component={Codices}/>\n        <Route path=\"/search\" exact={true} render={(props) => <SearchWrapper {...props} hidden={false}/>}/>\n        {\n          //<Route path=\"/edit/:id\" exact={true} component={EditExpensePage}/>\n        //<Route path=\"/help\" exact={true} component={HelpPage}/>\n        // <Route component={NotFoundPage}/>\n        }\n      </Switch>\n      <Footer/>\n    </div>\n  </HashRouter>\n)\n\nexport default AppRouter\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './styles/index.scss';\nimport AppRouter from './components/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}